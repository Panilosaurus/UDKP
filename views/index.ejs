<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Laporan UDKP</title>
    <link rel="icon" type="image/png" href="/img/logo-bkn.jpg">

    <!-- Fonts & Core CSS -->
    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">
    <link href="css/sb-admin-2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Bootstrap 5 JS -->
    <!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script> -->


    <!-- DataTables CSS -->
    <link href="vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
</head>

<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">
            <!-- Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="index.html">
                <div class="sidebar-brand-icon">
                    <img src="/img/logo-bkn.jpg" alt="" width="50px" height="60px" style="border-radius: 10px;">
                </div>
                <div class="sidebar-brand-text mx-3">KanReg VIII</div>
            </a>

            <hr class="sidebar-divider my-0">

            <!-- Dashboard -->
            <li class="nav-item active">
                <a class="nav-link" href="">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span></a>
            </li>

            <li class="nav-item">
                <a class="nav-link" href="/akun">
                    <i class="fas fa-users-cog"></i>
                    <span>Manajemen Akun</span>
                </a>
            </li>


            <hr class="sidebar-divider">

            <li class="nav-item">
                <a class="nav-link" href="#" data-toggle="modal" data-target="#inputDataModal">
                    <i class="fas fa-plus"></i>
                    <span>Input Data Baru</span>
                </a>
            </li>

            <hr class="sidebar-divider d-none d-md-block">

            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>
        </ul>
        <!-- End of Sidebar -->

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <form
                        class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
                        <div class="input-group">
                            <!-- <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..."
                                aria-label="Search" aria-describedby="basic-addon2"> -->
                            <!-- <div class="input-group-append">
                                <button class="btn btn-primary" type="button">
                                    <i class="fas fa-search fa-sm"></i>
                                </button>
                            </div> -->
                        </div>
                    </form>

                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item dropdown no-arrow d-sm-none">
                            <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-search fa-fw"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
                                aria-labelledby="searchDropdown">
                                <form class="form-inline mr-auto w-100 navbar-search">
                                    <div class="input-group">
                                        <input type="text" class="form-control bg-light border-0 small"
                                            placeholder="Search for..." aria-label="Search"
                                            aria-describedby="basic-addon2">
                                        <div class="input-group-append">
                                            <button class="btn btn-primary" type="button">
                                                <i class="fas fa-search fa-sm"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </li>

                        <!-- Alerts -->
                        <!-- <li class="nav-item dropdown no-arrow mx-1">
                            <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-bell fa-fw"></i>
                                <span class="badge badge-danger badge-counter">3+</span>
                            </a>
                            <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="alertsDropdown">
                                <h6 class="dropdown-header">Alerts Center</h6>
                                <a class="dropdown-item d-flex align-items-center" href="#">
                                    <div class="mr-3">
                                        <div class="icon-circle bg-primary"><i class="fas fa-file-alt text-white"></i>
                                        </div>
                                    </div>
                                    <div>
                                        <div class="small text-gray-500">December 12, 2019</div>
                                        <span class="font-weight-bold">A new monthly report is ready to download!</span>
                                    </div>
                                </a>
                                <a class="dropdown-item text-center small text-gray-500" href="#">Show All Alerts</a>
                            </div>
                        </li> -->

                        <!-- Messages -->
                        <!-- <li class="nav-item dropdown no-arrow mx-1">
                            <a class="nav-link dropdown-toggle" href="#" id="messagesDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-envelope fa-fw"></i>
                                <span class="badge badge-danger badge-counter">7</span>
                            </a>
                            <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                aria-labelledby="messagesDropdown">
                                <h6 class="dropdown-header">Message Center</h6>
                                <a class="dropdown-item d-flex align-items-center" href="#">
                                    <div class="dropdown-list-image mr-3">
                                        <img class="rounded-circle" src="img/undraw_profile_1.svg" alt="...">
                                        <div class="status-indicator bg-success"></div>
                                    </div>
                                    <div class="font-weight-bold">
                                        <div class="text-truncate">Hi there! I am wondering if you can help me with a
                                            problem…</div>
                                        <div class="small text-gray-500">Emily Fowler · 58m</div>
                                    </div>
                                </a>
                                <a class="dropdown-item text-center small text-gray-500" href="#">Read More Messages</a>
                            </div>
                        </li> -->

                        <div class="topbar-divider d-none d-sm-block"></div>

                        <div class="d-flex align-items-center">

                            <!-- Nama user -->
                            <span class="mr-3 text-gray-600 small">
                                <%= nama %>
                            </span>

                            <!-- Foto profil -->
                            <img class="img-profile rounded-circle mr-2" src="/img/logo-bkn.jpg"
                                style="width: 40px; height: 40px;">

                            <!-- Tombol logout -->
                            <a href="/logout" class="btn btn-danger btn-sm">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </a>
                        </div>


                    </ul>
                </nav>
                <!-- End of Topbar -->

                <!-- Page Content -->
                <div class="container-fluid">

                    <!-- Heading -->
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <div>
                            <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
                            <h2 class="h5 mt-2 mb-0 text-gray-600">Rangkuman Laporan UDKP</h2>
                        </div>

                        <div id="exportButtons"></div>
                    </div>





                    <!-- TABLE ROW (FULL WIDTH) -->
                    <div class="row">
                        <div class="col-12">
                            <!-- ROW CARD INFO -->
                            <div class="row mb-3">
                                <!-- Card Jumlah UPKP -->
                                <div class="col-md-2 mb-3">
                                    <div class="card shadow-sm border-left-danger">
                                        <div class="card-body py-3">
                                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Jumlah UPKP</div>
                                            <div id="cardUpkp" class="h5 mb-0 font-weight-bold text-gray-800">
                                                <%= countUpkp %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            
                                <!-- Card Jumlah UD TK. I -->
                                <div class="col-md-2 mb-3">
                                    <div class="card shadow-sm border-left-success">
                                        <div class="card-body py-3">
                                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Jumlah UD TK. I</div>
                                            <div id="cardUd1" class="h5 mb-0 font-weight-bold text-gray-800">
                                                <%= countUd1 %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            
                                <!-- Card Jumlah UD TK. II -->
                                <div class="col-md-2 mb-3">
                                    <div class="card shadow-sm border-left-warning">
                                        <div class="card-body py-3">
                                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Jumlah UD TK. II</div>
                                            <div id="cardUd2" class="h5 mb-0 font-weight-bold text-gray-800">
                                                <%= countUd2 %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            
                                <!-- Card Nilai Tertinggi -->
                                <div class="col-md-3 mb-3">
                                    <div class="card shadow-sm border-left-primary">
                                        <div class="card-body py-3">
                                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                                Nilai Tertinggi (UPKP & UD)
                                            </div>
                                            <div id="cardMax" class="h5 mb-0 font-weight-bold text-gray-800">
                                                <%= nilaiMinMax.nilai_tertinggi || '-' %>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Card Nilai Terendah -->
                                <div class="col-md-3 mb-3">
                                    <div class="card shadow-sm border-left-secondary">
                                        <div class="card-body py-3">
                                            <div class="text-xs font-weight-bold text-secondary text-uppercase mb-1">
                                                Nilai Terendah (UPKP & UD)
                                            </div>
                                            <div id="cardMin" class="h5 mb-0 font-weight-bold text-gray-800">
                                                <%= nilaiMinMax.nilai_terendah || '-' %>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>


                            <!-- ROW GRAFIK -->
                            <div class="row mb-4">
                                <!-- Grafik Nilai UPKP -->
                                <div class="col-lg-6 mb-4">
                                    <div class="card shadow">
                                        <div class="card-header py-3">
                                            <h6 class="m-0 font-weight-bold text-primary">Perbandingan Nilai UPKP</h6>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="chartNilaiIndex"></canvas>
                                        </div>
                                    </div>
                                </div>

                                <!-- Grafik Lulus vs Tidak Lulus -->
                                <div class="col-lg-6 mb-4">
                                    <div class="card shadow">
                                        <div class="card-header py-3">
                                            <h6 class="m-0 font-weight-bold text-success">
                                                Perbandingan Lulus vs Tidak Lulus (UD TK. I/II)
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <canvas id="chartLulusIndex"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Rekap (diletakkan setelah grafik, di luar row) -->
                            <div id="rekapContainer" class="my-4" style="display: none;"></div>

                            <div class="card shadow mb-4">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Data Pelaksanaan UDKP</h6>
                                </div>

                                <div class="card-body">
                                    <!-- Baris utama -->
                                    <div class="d-flex flex-wrap justify-content-between align-items-center mb-2">

                                        <!-- Bagian kiri: Cari Data + Tanggal + Reset -->
                                        <div class="d-flex flex-wrap align-items-center">
                                            <!-- Cari Data -->
                                            <div class="d-flex align-items-center mr-3 mb-2">
                                                <label class="font-weight-bold mb-0 mr-2"
                                                    style="white-space: nowrap;">Cari Data:</label>
                                                <input type="text" id="customSearch"
                                                    class="form-control form-control-sm"
                                                    placeholder="Ketik nama instansi, jenis ujian, status, dll..."
                                                    style="width: 220px;">
                                            </div>

                                            <!-- Awal -->
                                            <div class="d-flex align-items-center mr-3 mb-2">
                                                <label class="font-weight-bold mb-0 mr-2"
                                                    style="white-space: nowrap;">Awal:</label>
                                                <input type="date" id="startDate" class="form-control form-control-sm"
                                                    style="width: 160px;">
                                            </div>

                                            <!-- Akhir + Reset -->
                                            <div class="d-flex align-items-center mr-3 mb-2">
                                                <label class="font-weight-bold mb-0 mr-2"
                                                    style="white-space: nowrap;">Akhir:</label>
                                                <input type="date" id="endDate"
                                                    class="form-control form-control-sm mr-2" style="width: 160px;">
                                                <button class="btn btn-danger btn-sm" onclick="clearFilter()">
                                                    <i class="bi bi-arrow-counterclockwise"></i> Reset
                                                </button>
                                            </div>
                                        </div>

                                        <!-- Bagian kanan: Aksi Cepat + PDF -->
                                        <div class="d-flex align-items-center mb-2">
                                            <select id="filterAction" class="form-control form-control-sm mr-2"
                                                style="width: auto;">
                                                <option value="">-- Aksi Cepat --</option>
                                                <option value="highest">Nilai Tertinggi (UPKP)</option>
                                                <option value="lowest">Nilai Terendah (UPKP)</option>
                                            </select>
                                            <button id="btnExportPDF" class="btn btn-danger btn-sm">
                                                <i class="fas fa-file-pdf"></i> Simpan ke PDF
                                            </button>
                                        </div>


                                        <!-- Teks bantuan -->
                                        <small class="form-text text-muted mt-1" style="font-size: 0.85rem;">
                                            1. Isi hanya di <strong>Awal</strong> untuk mencari bulan dan tahun.<br>
                                            2. Isi <strong>Awal</strong> dan <strong>Akhir</strong> untuk pencarian
                                            dengan rentang tanggal.
                                        </small>
                                    </div>



                                    <div class="table-responsive">
                                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">


                                            <thead class="text-center">
                                                <tr>
                                                    <th style="width:60px;">NO</th>
                                                    <th>Nama Instansi</th>
                                                    <th>Jenis Ujian</th>
                                                    <th style="width:120px;">Jumlah Peserta</th>
                                                    <th style="width:160px;">Tanggal Pelaksanaan</th>
                                                    <th>Status</th>
                                                    <th>Dokumen</th>
                                                    <th>Petugas CAT</th>
                                                    <th style="width:140px;">Nilai Tertinggi (UPKP)</th>
                                                    <th style="width:140px;">Nilai Terendah (UPKP)</th>
                                                    <th style="width:170px;">Lulus PG (UD I/II)</th>
                                                    <th style="width:190px;">Tidak Lulus PG (UD I/II)</th>
                                                    <th style="width:120px;">Aksi</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tableBody">

                                                <% if (!groupedData || groupedData.length===0) { %>
                                                    <tr>
                                                        <td colspan="13" class="text-center">Belum ada data</td>
                                                    </tr>
                                                    <% } else { %>
                                                        <% groupedData.forEach((group, gIndex)=> { %>
                                                            <% group.rows.forEach((row, rIndex)=> { %>
                                                                <tr class="data-row" data-jenis="<%= (row.jenis_ujian || '').toString() %>"
                                                                    data-peserta="<%= Number(row.jumlah_peserta || 0) %>" data-lulus="<%= Number(row.jumlah_lulus_pg || 0) %>"
                                                                    data-tidak="<%= Number(row.jumlah_tidak_lulus_pg || 0) %>">

                                                                    <% if (rIndex===0) { %>
                                                                        <td class="text-center align-middle"
                                                                            rowspan="<%= group.rows.length %>">
                                                                            <%= gIndex + 1 %>
                                                                        </td>
                                                                        <td class="align-middle text-center"
                                                                            rowspan="<%= group.rows.length %>">
                                                                            <%= group.instansi %>
                                                                        </td>
                                                                        <% } %>

                                                                            <!-- Jenis Ujian -->
                                                                            <td class="align-middle text-center">
                                                                                <% const ujian=(row.jenis_ujian || ''
                                                                                    ).toUpperCase(); let
                                                                                    bgColor='#f0f0f0' ,textColor='#555'
                                                                                    ; if (ujian.includes('UPKP') &&
                                                                                    !ujian.includes('REMED'))
                                                                                    {bgColor='#fde2e1' ;
                                                                                    textColor='#b71c1c' ; } else if
                                                                                    (ujian.includes('UD TK. II')&&
                                                                                    !ujian.includes('REMED')) {
                                                                                    bgColor='#fff5cc' ;
                                                                                    textColor='#a67c00' ; } else if
                                                                                    (ujian.includes('UD TK. I') &&
                                                                                    !ujian.includes('REMED')) {
                                                                                    bgColor='#cedfce' ;
                                                                                    textColor='#1b5e20' ; } else if
                                                                                    (ujian.includes('REMED UPKP'))
                                                                                    {bgColor='#e3f2fd' ;
                                                                                    textColor='#0d47a1' ; } else if
                                                                                    (ujian.includes('REMED UD TK. II'))
                                                                                    { bgColor='#e0f7fa' ;
                                                                                    textColor='#006064' ; } else
                                                                                    if(ujian.includes('REMED UD TK. I'))
                                                                                    { bgColor='#f3e5f5' ;
                                                                                    textColor='#6a1b9a' ; } %>
                                                                                    <span class="badge"
                                                                                        style="background-color:<%= bgColor %>; color:<%= textColor %>; padding:6px 12px; border-radius:10px;">
                                                                                        <%= row.jenis_ujian || '—' %>
                                                                                    </span>
                                                                            </td>

                                                                            <!-- Jumlah Peserta (tidak rowspan) -->
                                                                            <td class="align-middle text-center">
                                                                                <%= row.jumlah_peserta || '-' %>
                                                                            </td>

                                                                            <% if (rIndex===0) { %>
                                                                                <!-- Hanya baris pertama dalam grup -->
                                                                                <td class="align-middle text-center"
                                                                                    rowspan="<%= group.rows.length %>">
                                                                                    <%= group.tanggal_pelaksanaan || '-'
                                                                                        %>
                                                                                </td>

                                                                                <td class="align-middle text-center"
                                                                                    rowspan="<%= group.rows.length %>">
                                                                                    <select
                                                                                        class="form-control form-control-sm status-inline d-inline-block w-auto"
                                                                                        data-group-id="<%= group.group_id %>"
                                                                                        data-old="<%= group.status || '' %>"
                                                                                        onchange="handleStatusChange(event)">
                                                                                        <option value="">-- Pilih --
                                                                                        </option>
                                                                                        <option
                                                                                            value="Persiapan Administrasi"
                                                                                            <%=group.status==='Persiapan Administrasi'
                                                                                            ?'selected':'' %>>Persiapan
                                                                                            Administrasi</option>
                                                                                        <option
                                                                                            value="Menunggu Pelaksanaan"
                                                                                            <%=group.status==='Menunggu Pelaksanaan'
                                                                                            ?'selected':'' %>>Menunggu
                                                                                            Pelaksanaan</option>
                                                                                        <option value="Selesai"
                                                                                            <%=group.status==='Selesai'
                                                                                            ?'selected':'' %>>Selesai
                                                                                        </option>
                                                                                    </select>
                                                                                </td>

                                                                                <td class="align-middle text-center"
                                                                                    rowspan="<%= group.rows.length %>">
                                                                                    <% if (group.dokumen &&
                                                                                        group.dokumen.startsWith('http'))
                                                                                        { %>
                                                                                        <a href="<%= group.dokumen %>"
                                                                                            target="_blank">Link
                                                                                            Dokumen</a>
                                                                                        <% } else { %>
                                                                                            <%= group.dokumen || '-' %>
                                                                                                <% } %>
                                                                                </td>
                                                                                <td class="align-middle text-center"
                                                                                    rowspan="<%= group.rows.length %>">
                                                                                    <% if (group.petugas_cat) {
                                                                                        group.petugas_cat.split(',').forEach(p=>
                                                                                        { %>
                                                                                        <span
                                                                                            class="badge badge-primary">
                                                                                            <%= p.trim() %>
                                                                                        </span>
                                                                                        <% }) } else { %> - <% } %>
                                                                                </td>
                                                                                <% } %>

                                                                                    <!-- Nilai -->
                                                                                    <td class="align-middle text-center"
                                                                                        data-nilai-tertinggi="<%= row.nilai_tertinggi_pg || '' %>"
                                                                                        data-nilai-terendah="<%= row.nilai_terendah_pg || '' %>">
                                                                                        <%= row.nilai_tertinggi_pg
                                                                                            || '—' %>
                                                                                    </td>
                                                                                    <td class="align-middle text-center"
                                                                                        data-nilai-terendah="<%= row.nilai_terendah_pg || '' %>">
                                                                                        <%= row.nilai_terendah_pg || '—'
                                                                                            %>
                                                                                    </td>
                                                                                    <td
                                                                                        class="align-middle text-center">
                                                                                        <% if ((row.jenis_ujian || ''
                                                                                            ).includes('UD TK') ||
                                                                                            (row.jenis_ujian || ''
                                                                                            ).includes('REMED UD')) { %>
                                                                                            <%= row.jumlah_lulus_pg
                                                                                                || '—' %>
                                                                                                <% } else { %>
                                                                                                    —
                                                                                                    <% } %>
                                                                                    </td>
                                                                                    <td
                                                                                        class="align-middle text-center">
                                                                                        <% if ((row.jenis_ujian || ''
                                                                                            ).includes('UD TK') ||
                                                                                            (row.jenis_ujian || ''
                                                                                            ).includes('REMED UD')) { %>
                                                                                            <%= row.jumlah_tidak_lulus_pg
                                                                                                || '—' %>
                                                                                                <% } else { %>
                                                                                                    —
                                                                                                    <% } %>
                                                                                    </td>

                                                                                    <% if (rIndex===0) { %>
                                                                                        <td class="text-center align-middle"
                                                                                            rowspan="<%= group.rows.length %>">
                                                                                            <div
                                                                                                class="d-flex flex-column justify-content-center align-items-center gap-2">
                                                                                                <!-- 🔹 Baris pertama: 3 tombol kecil -->
                                                                                                <div
                                                                                                    class="d-flex justify-content-center align-items-center gap-2 flex-nowrap">
                                                                                                    <a class="btn btn-sm btn-info"
                                                                                                        href="/inspect/<%= group.rows.map(r => r.id).join(',') %>"
                                                                                                        title="Inspect">
                                                                                                        <i
                                                                                                            class="fa-solid fa-magnifying-glass"></i>
                                                                                                    </a>

                                                                                                    <% function
                                                                                                        rowByType(arr,
                                                                                                        t) { if
                                                                                                        (!Array.isArray(arr))
                                                                                                        return {}; for
                                                                                                        (var i=0; i <
                                                                                                        arr.length; i++)
                                                                                                        { if (arr[i] &&
                                                                                                        arr[i].jenis_ujian===t)
                                                                                                        return arr[i]; }
                                                                                                        return {}; } var
                                                                                                        upkp=rowByType(group.rows, 'UPKP'
                                                                                                        ); var
                                                                                                        remedUpkp=rowByType(group.rows, 'REMED UPKP'
                                                                                                        ); var
                                                                                                        ud1=rowByType(group.rows, 'UD TK. I'
                                                                                                        ); var
                                                                                                        ud2=rowByType(group.rows, 'UD TK. II'
                                                                                                        ); var
                                                                                                        rud1=rowByType(group.rows, 'REMED UD TK. I'
                                                                                                        ); var
                                                                                                        rud2=rowByType(group.rows, 'REMED UD TK. II'
                                                                                                        ); let tgl='' ;
                                                                                                        if
                                                                                                        (group.tanggal_pelaksanaan)
                                                                                                        { try { const
                                                                                                        d=new
                                                                                                        Date(group.tanggal_pelaksanaan);
                                                                                                        tgl=d.toISOString().split('T')[0];
                                                                                                        } catch (e) {
                                                                                                        tgl='' ; } }
                                                                                                        function v(x){
                                                                                                        return (x===null
                                                                                                        ||
                                                                                                        x===undefined)
                                                                                                        ? '' : x; } %>

                                                                                                        <a href="#"
                                                                                                            class="btn btn-sm btn-primary btn-edit"
                                                                                                            title="Edit"
                                                                                                            data-toggle="modal"
                                                                                                            data-target="#editDataModal"
                                                                                                            data-id="<%= group.rows.map(r => r.id).join(',') %>"
                                                                                                            data-tanggal="<%= tgl %>"
                                                                                                            data-instansi="<%= v(group.instansi) %>"
                                                                                                            data-jumlah-upkp="<%= (group.rows.find(r=> r.jenis_ujian === 'UPKP') || {}).jumlah_peserta || '' %>"
                                                                                                            data-jumlah-ud1="<%= (group.rows.find(r=> r.jenis_ujian === 'UD TK. I') || {}).jumlah_peserta || '' %>"
                                                                                                            data-jumlah-ud2="<%= (group.rows.find(r=> r.jenis_ujian === 'UD TK. II') || {}).jumlah_peserta || '' %>"
                                                                                                            data-jumlah-remed-upkp="<%= (group.rows.find(r=> r.jenis_ujian === 'REMED UPKP') || {}).jumlah_peserta || '' %>"
                                                                                                            data-jumlah-remed-ud1="<%= (group.rows.find(r=> r.jenis_ujian === 'REMED UD TK. I') || {}).jumlah_peserta || '' %>"
                                                                                                            data-jumlah-remed-ud2="<%= (group.rows.find(r=> r.jenis_ujian === 'REMED UD TK. II') || {}).jumlah_peserta || '' %>"
                                                                                                            data-status="<%= v(group.status) %>"
                                                                                                            data-dokumen="<%= v(group.dokumen) %>"
                                                                                                            data-petugas="<%= v(group.petugas_cat) %>"
                                                                                                            data-nilai-tertinggi="<%= v(upkp.nilai_tertinggi_pg) %>"
                                                                                                            data-nilai-terendah="<%= v(upkp.nilai_terendah_pg) %>"
                                                                                                            data-nilai-tertinggi-remed="<%= v(remedUpkp.nilai_tertinggi_pg) %>"
                                                                                                            data-nilai-terendah-remed="<%= v(remedUpkp.nilai_terendah_pg) %>"
                                                                                                            data-lulus-ud1="<%= v(ud1.jumlah_lulus_pg) %>"
                                                                                                            data-tidak-lulus-ud1="<%= v(ud1.jumlah_tidak_lulus_pg) %>"
                                                                                                            data-lulus-ud2="<%= v(ud2.jumlah_lulus_pg) %>"
                                                                                                            data-tidak-lulus-ud2="<%= v(ud2.jumlah_tidak_lulus_pg) %>"
                                                                                                            data-lulus-remed-ud1="<%= v(rud1.jumlah_lulus_pg) %>"
                                                                                                            data-tidak-lulus-remed-ud1="<%= v(rud1.jumlah_tidak_lulus_pg) %>"
                                                                                                            data-lulus-remed-ud2="<%= v(rud2.jumlah_lulus_pg) %>"
                                                                                                            data-tidak-lulus-remed-ud2="<%= v(rud2.jumlah_tidak_lulus_pg) %>"
                                                                                                            data-group-id="<%= group.rows[0].group_id %>">
                                                                                                            <i
                                                                                                                class="fas fa-edit"></i>
                                                                                                        </a>



                                                                                                        <button
                                                                                                            type="button"
                                                                                                            class="btn btn-sm btn-danger btn-delete"
                                                                                                            data-id="<%= group.rows.map(r => r.id).join(',') %>"
                                                                                                            title="Hapus">
                                                                                                            <i
                                                                                                                class="fas fa-trash"></i>
                                                                                                        </button>
                                                                                                </div>

                                                                                                <button type="button"
                                                                                                    class="btn btn-success btn-sm mt-2 w-100 fw-semibold btn-input-nilai"
                                                                                                    data-group-id="<%= group.rows[0].group_id %>">
                                                                                                    Edit Nilai
                                                                                                </button>

                                                                                            </div>
                                                                                        </td>
                                                                                        <% } %>

                                                                </tr>
                                                                <% }) %>
                                                                    <% }) %>
                                                                        <% } %>
                                            </tbody>
                                            <tfoot id="tableFooter"></tfoot>
                                        </table>
                                        <div class="d-flex justify-content-between align-items-center flex-wrap mt-3">
                                            <div class="page-info small text-muted mb-2 mb-sm-0">
                                                Menampilkan <%= startEntry %>–<%= endEntry %> dari <%= totalGroups %>
                                                            data
                                            </div>

                                            <nav>
                                                <ul class="pagination mb-0">
                                                    <% if (page> 1) { %>
                                                        <li class="page-item">
                                                            <a class="page-link"
                                                                href="?page=<%= page - 1 %>&limit=<%= limit %>">&laquo;</a>
                                                        </li>
                                                        <% } else { %>
                                                            <li class="page-item disabled"><span
                                                                    class="page-link">&laquo;</span></li>
                                                            <% } %>

                                                                <% for (let i=1; i <=totalPages; i++) { %>
                                                                    <li
                                                                        class="page-item <%= page === i ? 'active' : '' %>">
                                                                        <a class="page-link"
                                                                            href="?page=<%= i %>&limit=<%= limit %>">
                                                                            <%= i %>
                                                                        </a>
                                                                    </li>
                                                                    <% } %>

                                                                        <% if (page < totalPages) { %>
                                                                            <li class="page-item">
                                                                                <a class="page-link"
                                                                                    href="?page=<%= page + 1 %>&limit=<%= limit %>">&raquo;</a>
                                                                            </li>
                                                                            <% } else { %>
                                                                                <li class="page-item disabled"><span
                                                                                        class="page-link">&raquo;</span>
                                                                                </li>
                                                                                <% } %>
                                                </ul>
                                            </nav>
                                        </div>

                                    </div>
                                    <!-- Modal Konfirmasi Hapus -->
                                    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog"
                                        aria-labelledby="confirmDeleteLabel" aria-hidden="true">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content border-0 rounded-lg shadow-lg text-center">
                                                <div class="modal-body p-4">
                                                    <div class="mb-3">
                                                        <i class="fas fa-exclamation-circle text-danger"
                                                            style="font-size: 48px;"></i>
                                                    </div>
                                                    <h5 class="mb-3 font-weight-bold">Yakin ingin menghapus data ini?
                                                    </h5>
                                                    <p class="text-muted mb-4">Data yang dihapus tidak dapat
                                                        dikembalikan.</p>
                                                    <div class="d-flex justify-content-center gap-2">
                                                        <button type="button" class="btn btn-secondary px-4 mr-2"
                                                            data-dismiss="modal">Batal</button>
                                                        <button type="button" class="btn btn-danger px-4"
                                                            id="confirmDeleteBtn">Ya, Hapus</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                </div><!-- /.card-body -->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.container-fluid -->
            </div>
            <!-- End of Main Content -->

            <!-- Modal: Edit Data -->
            <div class="modal fade" id="editDataModal" tabindex="-1" role="dialog" aria-labelledby="editDataLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">

                        <div class="modal-header bg-primary text-white">
                            <h5 class="modal-title" id="editDataLabel">Edit Data UDKP</h5>
                            <button class="close text-white" type="button" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>

                        <form id="formEditData" novalidate method="POST" action="/update">
                            <input type="hidden" name="group_id" id="edit_group_id" value="">

                            <div class="modal-body">
                                <!-- Baris 1 -->
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label>Nama Instansi</label>
                                        <select id="nama_instansi" class="form-control" name="nama_instansi" required>
                                            <option value="">-- Pilih Instansi --</option>
                                        </select>
                                        <div class="invalid-feedback">Nama Instansi wajib dipilih.</div>

                                    </div>
                                </div>

                                <!-- Baris 2 -->
                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label>Tanggal Pelaksanaan</label>
                                        <input type="date" id="edit_tgl_pelaksanaan" class="form-control"
                                            name="tgl_pelaksanaan" required>
                                        <div class="invalid-feedback">Tanggal Pelaksanaan wajib diisi.</div>
                                    </div>

                                    <div class="form-group col-md-4">
                                        <label>Status</label>
                                        <select id="edit_status_pelaksanaan" class="form-control"
                                            name="status_pelaksanaan" required>
                                            <option value="">-- Pilih --</option>
                                            <option value="Persiapan Administrasi">Persiapan Administrasi</option>
                                            <option value="Menunggu Pelaksanaan">Menunggu Pelaksanaan</option>
                                            <option value="Selesai">Selesai</option>
                                        </select>
                                        <div class="invalid-feedback">Status Pelaksanaan wajib dipilih.</div>
                                    </div>
                                </div>

                                <!-- Baris 3 -->
                                <div class="form-row">
                                    <div class="form-group col-md-8">
                                        <label>Dokumen (Link Google Drive)</label>
                                        <input type="url" id="edit_link_dokumen" class="form-control"
                                            name="link_dokumen" placeholder="https://drive.google.com/...">
                                        <small class="form-text text-muted">
                                            Tempelkan URL berbagi (share link) Google Drive.
                                        </small>
                                        <div class="invalid-feedback">Link Dokumen wajib diisi dan harus valid.</div>
                                    </div>

                                    <div class="form-group col-md-4">
                                        <label for="petugas_cat">Petugas CAT</label>
                                        <div id="editPetugasCatGroup"></div>
                                        <div id="editPetugasFeedback" class="invalid-feedback"></div>
                                        <div class="mt-2 d-flex">
                                            <button class="btn btn-sm btn-outline-primary" type="button"
                                                id="btnEditAddPetugas">+ Tambah</button>
                                        </div>
                                        <small class="form-text text-muted">
                                            Untuk menghapus, cukup kosongkan nama petugas yang ingin dihapus.
                                        </small>
                                    </div>

                                </div>

                                <hr>

                                <!-- Section nilai -->
                                <div id="editNilaiSection"></div>
                            </div>

                            <div class="modal-footer sticky-footer-modal">
                                <button class="btn btn-secondary" type="button" data-dismiss="modal">Batal</button>
                                <button class="btn btn-primary" type="submit">Simpan</button>
                            </div>

                        </form>
                    </div>
                </div>
            </div>


            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    const jenisUjianList = [
                        "UPKP",
                        "UD TK. I",
                        "UD TK. II",
                        "REMED UPKP",
                        "REMED UD TK. I",
                        "REMED UD TK. II",
                    ];

                    function generateEditSection(container) {
                        container.innerHTML = "";
                        jenisUjianList.forEach((ujian, i) => {
                            const block = document.createElement("div");
                            block.classList.add("border", "rounded", "p-3", "mb-3", "bg-light");
                            let html = `
                <h6 class="mb-3 font-weight-bold">${ujian}</h6>
                <div class="form-row mb-3">
                    <div class="form-group col-md-12">
                        <label>Jumlah Peserta (${ujian})</label>
                        <input type="number" name="jumlah_peserta_${i}" class="form-control"
                               min="0" placeholder="Jumlah peserta ${ujian}">
                    </div>
                </div>`;

                            if (ujian.includes("UPKP")) {
                                html += `
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Nilai Tertinggi (${ujian})</label>
                        <input type="number" name="nilai_tertinggi_${i}" class="form-control" min="0">
                    </div>
                    <div class="form-group col-md-6">
                        <label>Nilai Terendah (${ujian})</label>
                        <input type="number" name="nilai_terendah_${i}" class="form-control" min="0">
                    </div>
                </div>`;
                            } else {
                                html += `
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label>Jumlah Lulus PG (${ujian})</label>
                        <input type="number" name="jumlah_lulus_pg_${i}" class="form-control" min="0">
                    </div>
                    <div class="form-group col-md-6">
                        <label>Jumlah Tidak Lulus PG (${ujian})</label>
                        <input type="number" name="jumlah_tidak_lulus_pg_${i}" class="form-control" min="0">
                    </div>
                </div>`;
                            }

                            block.innerHTML = html;
                            container.appendChild(block);
                        });
                    }

                    // Jalankan hanya saat modal edit muncul
                    $('#editDataModal').on('shown.bs.modal', function () {
                        const container = document.getElementById("editNilaiSection");
                        if (container) generateEditSection(container);
                    });
                });
            </script>




            <!-- Modal: Input Data Baru -->
            <div class="modal fade" id="inputDataModal" tabindex="-1" role="dialog" aria-labelledby="inputDataLabel"
                aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">

                        <div class="modal-header">
                            <h5 class="modal-title" id="inputDataLabel">Input Data Baru</h5>
                            <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>

                        <form id="formInputBaru" data-mode="tambah" novalidate action="/tambah" method="POST">
                            <input type="hidden" name="group_id" id="groupId" value="">
                            <div class="modal-body">

                                <!-- Baris 1 -->
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label>Nama Instansi</label>
                                        <select id="edit_nama_instansi" class="form-control" name="nama_instansi" required>
                                            <option value="">-- Pilih Instansi --</option>
                                        </select>
                                        <div class="invalid-feedback">Nama Instansi wajib dipilih.</div>

                                    </div>
                                </div>

                                <!-- Baris 2 -->
                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label>Tanggal Pelaksanaan</label>
                                        <input type="date" id="tgl_pelaksanaan" class="form-control"
                                            name="tgl_pelaksanaan" required>
                                        <div class="invalid-feedback">Tanggal Pelaksanaan wajib diisi.</div>
                                    </div>

                                    <div class="form-group col-md-4">
                                        <label>Status</label>
                                        <select id="status_pelaksanaan" class="form-control" name="status_pelaksanaan"
                                            required>
                                            <option value="">-- Pilih --</option>
                                            <option value="Persiapan Administrasi">Persiapan Administrasi</option>
                                            <option value="Menunggu Pelaksanaan">Menunggu Pelaksanaan</option>
                                            <option value="Selesai">Selesai</option>
                                        </select>
                                        <div class="invalid-feedback">Status Pelaksanaan wajib dipilih.</div>
                                    </div>
                                </div>

                                <!-- Baris 3 -->
                                <div class="form-row">
                                    <div class="form-group col-md-8">
                                        <label>Dokumen (Link Google Drive)</label>
                                        <input type="url" id="link_dokumen" class="form-control" name="link_dokumen"
                                            placeholder="https://drive.google.com/...">
                                        <small class="form-text text-muted">
                                            Tempelkan URL berbagi (share link) Google Drive.
                                        </small>
                                        <div class="invalid-feedback">Jika diisi, harus berupa link Google Drive yang
                                            valid.</div>
                                    </div>

                                    <div class="form-group col-md-4">
                                        <label>Petugas CAT</label>
                                        <div id="petugasCatGroup"></div>
                                        <div id="petugasFeedback" class="invalid-feedback"></div>
                                        <div class="mt-2 d-flex">
                                            <button class="btn btn-sm btn-outline-primary mr-2" type="button"
                                                id="btnAddPetugas">+ Tambah</button>
                                            <button class="btn btn-sm btn-outline-danger" type="button"
                                                id="btnRemovePetugas">– Kurangi</button>
                                        </div>
                                        <small class="form-text text-muted">Mulai dari 1 nama. Gunakan +/– untuk
                                            menyesuaikan.</small>
                                    </div>
                                </div>
                                <hr>
                                <!-- Nilai untuk UPKP -->
                                <div id="nilaiSection"></div>
                            </div>

                            <div class="modal-footer sticky-footer-modal">
                                <button class="btn btn-secondary" type="button" data-dismiss="modal">Batal</button>
                                <button class="btn btn-primary" type="submit">Simpan</button>
                            </div>

                        </form>

                    </div>
                </div>
            </div>
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    const jenisUjianList = [
                        "UPKP",
                        "UD TK. I",
                        "UD TK. II",
                        "REMED UPKP",
                        "REMED UD TK. I",
                        "REMED UD TK. II",
                    ];

                    // Jalankan hanya ketika modal input baru dibuka
                    $('#inputDataModal').on('shown.bs.modal', function () {
                        const nilaiSection = document.getElementById("nilaiSection");
                        if (!nilaiSection) return;

                        nilaiSection.innerHTML = "";
                        jenisUjianList.forEach((ujian, i) => {
                            const block = document.createElement("div");
                            block.classList.add("border", "rounded", "p-3", "mb-3", "bg-light");
                            block.innerHTML = `
                <h6 class="mb-3 font-weight-bold">${ujian}</h6>
                <div class="form-row mb-3">
                    <div class="form-group col-md-12">
                        <label>Jumlah Peserta (${ujian})</label>
                        <input type="number" name="jumlah_peserta_${i}" class="form-control"
                               min="0" placeholder="Jumlah peserta ${ujian}">
                    </div>
                </div>`;
                            nilaiSection.appendChild(block);
                        });
                    });
                });
            </script>


            <!-- Modal Input Nilai -->
            <div class="modal fade" id="modalInputNilai" tabindex="-1" role="dialog"
                aria-labelledby="modalInputNilaiLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">

                        <!-- Header -->
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalInputNilaiLabel">Input Nilai Peserta</h5>
                            <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>

                        <!-- Form -->
                        <form id="formInputNilai" novalidate>
                            <div class="modal-body">
                                <div id="nilaiContent">
                                    <div class="text-center text-muted py-4">Memuat data...</div>
                                </div>
                            </div>

                            <!-- Footer -->
                            <div class="modal-footer">
                                <button class="btn btn-secondary" type="button" data-dismiss="modal">Batal</button>
                                <button type="submit" class="btn btn-primary" form="formInputNilai">Simpan
                                    Nilai</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>


            <!-- (Opsional) gaya kecil untuk switch -->
            <style>
                .btn-print-darkblue {
                    background-color: #0d47a1 !important;
                    /* biru tua */
                    color: #fff !important;
                    border: none !important;
                }

                .btn-print-darkblue:hover {
                    background-color: #093170 !important;
                    /* lebih gelap saat hover */
                }

                .switch {
                    position: relative;
                    display: inline-block;
                    width: 48px;
                    height: 24px
                }

                .switch input {
                    display: none
                }

                .slider {
                    position: absolute;
                    cursor: pointer;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: #ddd;
                    transition: .2s;
                    border-radius: 24px
                }

                .slider:before {
                    position: absolute;
                    content: "";
                    height: 18px;
                    width: 18px;
                    left: 3px;
                    bottom: 3px;
                    background: white;
                    transition: .2s;
                    border-radius: 50%
                }

                input:checked+.slider {
                    background-color: #1cc88a
                }

                input:checked+.slider:before {
                    transform: translateX(24px)
                }

                .dataTables_filter {
                    display: block !important;
                }

                .dataTables_filter {
                    display: block !important;
                    float: right !important;
                    margin-bottom: 1rem;
                }

                .dataTables_length {
                    display: block !important;
                    float: left !important;
                    margin-bottom: 1rem;
                }

                /* Biar rapi */
                div.dataTables_wrapper div.dataTables_filter input {
                    margin-left: 0.5em;
                    border: 1px solid #d1d3e2;
                    border-radius: 6px;
                    padding: 4px 8px;
                }

                .dataTables_filter {
                    display: block !important;
                    float: right !important;
                    margin-bottom: 1rem;
                }

                .dataTables_length {
                    display: block !important;
                    float: left !important;
                    margin-bottom: 1rem;
                }

                div.dataTables_wrapper div.dataTables_filter input {
                    margin-left: 0.5em;
                    border: 1px solid #d1d3e2;
                    border-radius: 6px;
                    padding: 4px 8px;
                }

                /* Header tabel rata tengah */
                #dataTable thead th {
                    text-align: center;
                    vertical-align: middle;
                }

                #customSearch {
                    width: 300px;
                    border-radius: 6px;
                    border: 1px solid #d1d3e2;
                    padding: 6px 10px;
                }

                .pagination {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    gap: 6px;
                }

                .pagination .page-item {
                    font-size: 1rem;
                }

                .pagination .page-link {
                    color: #4f46e5;
                    border: 1px solid #dcdcdc;
                    border-radius: 8px;
                    padding: 6px 12px;
                    transition: all 0.2s ease-in-out;
                }

                .pagination .page-link:hover {
                    background-color: #eef2ff;
                    border-color: #6366f1;
                }

                .pagination .active .page-link {
                    background-color: #4f46e5;
                    color: white;
                    border-color: #4f46e5;
                }

                .page-info {
                    font-size: 0.95rem;
                    color: #666;
                    margin-right: 10px;
                }

                /* Efek transisi untuk sidebar */
                #accordionSidebar {
                    transition: all 0.3s ease-in-out;
                }

                /* Ketika sidebar ditutup (SB Admin 2 menambahkan kelas 'toggled' ke body) */
                .sidebar.toggled {
                    width: 6.5rem !important;
                    overflow: hidden;
                }

                /* Transisi ikon dan teks di dalam sidebar */
                .sidebar .nav-item,
                .sidebar .nav-link,
                .sidebar .sidebar-brand {
                    transition: all 0.3s ease-in-out;
                }

                /* Ketika sidebar mengecil, sembunyikan teks dengan halus */
                .sidebar.toggled .nav-link span,
                .sidebar.toggled .sidebar-brand-text {
                    opacity: 0;
                    transition: opacity 0.2s ease;
                }

                /* Saat sidebar dibuka kembali, tampilkan teks */
                .sidebar:not(.toggled) .nav-link span,
                .sidebar:not(.toggled) .sidebar-brand-text {
                    opacity: 1;
                    transition: opacity 0.3s ease;
                }

                .is-valid {
                    border: 2px solid #28a745 !important;
                    background-color: #e9fbe9;
                }

                .is-invalid {
                    border: 2px solid #dc3545 !important;
                    background-color: #fceaea;
                }

                .invalid-feedback {
                    color: #dc3545;
                    font-size: 0.85rem;
                    display: none;
                    margin-top: 4px;
                }

                .invalid-feedback.active {
                    display: block;
                }

                .swal2-container {
                    z-index: 20000 !important;
                    /* pastikan lebih tinggi dari modal Bootstrap */
                }

                /* === Sticky footer di dalam modal === */
                .sticky-footer-modal {
                    position: sticky;
                    bottom: 0;
                    background-color: #fff;
                    border-top: 1px solid #dee2e6;
                    padding: 12px 16px;
                    display: flex;
                    justify-content: flex-end;
                    gap: 10px;
                    z-index: 100;
                }

                /* Tambahkan efek shadow agar tampak terpisah dari isi modal */
                .sticky-footer-modal::before {
                    content: "";
                    position: absolute;
                    top: -6px;
                    left: 0;
                    right: 0;
                    height: 6px;
                    background: linear-gradient(to top, rgba(0, 0, 0, 0.05), transparent);
                }

                /* Pastikan isi modal bisa di-scroll tanpa menutupi footer */
                .modal-body {
                    max-height: calc(100vh - 220px);
                    overflow-y: auto;
                }
                @media print {
                    thead { display: table-header-group; }
                    tfoot { display: table-row-group; }
                }
            </style>

            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Universitas Lambung Mangkurat</span>
                    </div>
                </div>
            </footer>
        </div>
        <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top"><i class="fas fa-angle-up"></i></a>

    <!-- Core JS -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="js/sb-admin-2.min.js"></script>

    <script src="/js/sb-admin-2.min.js"></script>
    <!-- Pastikan sudah load SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Chart.js -->
    <script src="vendor/chart.js/Chart.min.js"></script>
    <script src="js/demo/chart-pie-demo.js"></script>

    <!-- DataTables JS -->
    <script src="vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="vendor/datatables/dataTables.bootstrap4.min.js"></script>

    <!-- DataTables Buttons -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.2/css/buttons.bootstrap4.min.css">

    <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.bootstrap4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.print.min.js"></script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <script>
        $(document).ready(function () {
            const warningModal = new bootstrap.Modal(document.getElementById('warningModal'));

            $('#formInputBaru').on('submit', function (e) {
                e.preventDefault();
                let hasValue = false;

                for (let i = 0; i < 6; i++) {
                    const val = $(`input[name="jumlah_peserta_${i}"]`).val();
                    if (val && parseInt(val) > 0) {
                        hasValue = true;
                        break;
                    }
                }

                if (!hasValue) {
                    const warningModal = new bootstrap.Modal(document.getElementById('warningModal'));
                    warningModal.show();
                    return; // batalkan submit
                }

                // lanjut submit kalau ada nilai
                this.submit();
            });

        });
    </script>

    <script>
        $(function () {
            const $table = $('#dataTable');

            // Hindari error "Cannot reinitialise DataTable"
            if ($.fn.DataTable.isDataTable($table)) {
                $table.DataTable().destroy();
            }

            // Inisialisasi DataTables TANPA rowGroup (biar rowspan aman)
            const dtOptions = {
                paging: false,
                searching: false,
                ordering: false,
                info: false,
                responsive: true,
                autoWidth: false,
                language: {
                    search: "Cari Data:",
                    zeroRecords: "Tidak ada data ditemukan",
                    info: "Menampilkan _START_–_END_ dari _TOTAL_ data",
                    infoEmpty: "Belum ada data",
                    lengthMenu: "Tampilkan _MENU_ data"
                }
            };

            let dt = $table.DataTable(dtOptions);
            // 🗑️ Fungsi untuk binding tombol hapus
            function bindDeleteButtons() {
                console.log("🔗 bindDeleteButtons aktif"); // debug log di console

                // Gunakan namespace .delete agar tidak bentrok dengan event lain
                $(document).off('click', '.btn-delete').on('click', '.btn-delete', async function (e) {
                    e.preventDefault();
                    const id = $(this).data('id'); // bisa berisi "12,13,14"
                    console.log("🗑 Tombol hapus diklik, ID:", id);

                    if (!id) {
                        Swal.fire("Error", "ID data tidak ditemukan.", "error");
                        return;
                    }

                    // Tampilkan konfirmasi SweetAlert
                    const result = await Swal.fire({
                        title: 'Yakin ingin menghapus data ini?',
                        text: 'Data yang dihapus tidak dapat dikembalikan.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Ya, hapus',
                        cancelButtonText: 'Batal',
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#6c757d'
                    });

                    if (!result.isConfirmed) return;

                    try {
                        const res = await fetch(`/hapus/${id}`, { method: 'DELETE' });
                        const data = await res.json();

                        if (res.ok && data.success) {
                            console.log(`✅ Berhasil hapus ${data.deleted} data`);
                            await Swal.fire({
                                icon: 'success',
                                title: 'Berhasil!',
                                text: `${data.deleted} data berhasil dihapus.`,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#28a745',
                                allowOutsideClick: false
                            });
                            location.reload();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Gagal!',
                                text: data.message || 'Data gagal dihapus.',
                            });
                        }
                    } catch (err) {
                        console.error("❌ Error fetch hapus:", err);
                        Swal.fire("Kesalahan Server", "Terjadi kesalahan saat menghapus data.", "error");
                    }
                });
            }
        }); 
    </script>


    <script>
        document.getElementById('customSearch').addEventListener('keyup', function (e) {
            if (e.key === 'Enter') {
                const query = this.value.trim();
                const baseUrl = window.location.pathname;
                window.location.href = query ? `${baseUrl}?q=${encodeURIComponent(query)}` : baseUrl;
            }
        });
    </script>
    <script>
        (function () {
            function toggleKeterangan() {
                var $status = $('#statusSelect');
                var $ket = $('#keteranganInput');
                if ($status.length === 0 || $ket.length === 0) return;

                var v = String($status.val() || '').trim().toLowerCase();  // normalisasi
                var enable = (v === 'tolak');

                // set enable/disable + required
                $ket.prop('disabled', !enable).prop('required', enable);
                if (!enable) $ket.val('');
            }

            // 1) Inisialisasi saat DOM siap
            $(toggleKeterangan);

            // 2) Re-evaluasi setiap kali pilihan Status berubah
            $(document).on('change', '#statusSelect', toggleKeterangan);

            // 3) Pastikan saat modal dibuka pertama kali juga tersinkron
            $('#inputDataModal').on('shown.bs.modal', toggleKeterangan);

            // 4) (opsional) jika modal bisa dibuka beberapa kali, rapikan saat ditutup
            $('#inputDataModal').on('hidden.bs.modal', function () {
                $('#formInputBaru')[0].reset();
                toggleKeterangan();
            });
        })();
    </script>

    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <!-- DataTables Buttons -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.2/css/buttons.bootstrap4.min.css">

    <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.bootstrap4.min.js"></script>

    <!-- Untuk export Excel/PDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.print.min.js"></script>

    <script src="https://cdn.datatables.net/rowgroup/1.3.1/js/dataTables.rowGroup.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/rowgroup/1.3.1/css/rowGroup.dataTables.min.css">


    <script>
        // ====== Petugas CAT Dinamis ======
        (function () {
            const group = document.getElementById('petugasCatGroup');
            const addBtn = document.getElementById('btnAddPetugas');
            const removeBtn = document.getElementById('btnRemovePetugas');

            function createPetugasInput(index, value = '') {
                const wrapper = document.createElement('div');
                wrapper.className = 'mb-2';
                wrapper.dataset.role = 'petugas-item';
                wrapper.innerHTML = `
    <input type="text"
           class="form-control"
           name="petugas_cat[]"
           value="${value}"
           placeholder="Nama Pegawai ${index}">
  `;
                return wrapper;
            }




            function refreshPlaceholders() {
                const items = group.querySelectorAll('[data-role="petugas-item"] input');
                items.forEach((inp, i) => inp.placeholder = `Nama Pegawai ${i + 1}`);
            }

            // Inisialisasi 1 kolom
            // Ambil data lama dari atribut hidden (jika ada)
            const oldPetugas = document.getElementById('oldPetugasCat')?.value || '';
            const existingNames = oldPetugas ? oldPetugas.split(',').map(n => n.trim()) : [];

            // Jika ada data lama, isi input berdasarkan data itu
            if (existingNames.length > 0) {
                existingNames.forEach((name, i) => {
                    group.appendChild(createPetugasInput(i + 1, name));
                });
            } else {
                // Kalau tidak ada, buat satu input kosong
                group.appendChild(createPetugasInput(1));
            }


            addBtn.addEventListener('click', function () {
                const count = group.querySelectorAll('[data-role="petugas-item"]').length;
                group.appendChild(createPetugasInput(count + 1));
                refreshPlaceholders();
            });

            removeBtn.addEventListener('click', function () {
                const items = group.querySelectorAll('[data-role="petugas-item"]');
                if (items.length > 1) {
                    group.removeChild(items[items.length - 1]);
                    refreshPlaceholders();
                }
            });
        })();

        // ====== Enable/Disable Field Berdasar Jenis Ujian ======
        (function () {
            const jenis = document.getElementById('jenisUjian');

            const upkpFields = [
                document.getElementById('nilaiTertinggiUpkp'),
                document.getElementById('nilaiTerendahUpkp')
            ];
            const udFields = [
                document.getElementById('jumlahLulusUd'),
                document.getElementById('jumlahTidakLulusUd')
            ];

            function setDisabled(elements, disabled, required = false) {
                elements.forEach(el => {
                    el.disabled = disabled;
                    if (required) {
                        el.required = !disabled; // hanya required bila aktif
                    } else {
                        el.required = !disabled;
                    }
                    if (disabled) el.value = '';
                });
            }

            function updateFieldState() {
                const v = jenis.value;
                // Aturan:
                // - Field UPKP aktif HANYA jika v === 'UPKP'
                // - Field UD aktif jika v adalah UD TK. I/II atau REMED UD TK. I/II
                const isUPKP = (v === 'UPKP' || v === 'REMED UPKP');
                const isUD = (v === 'UD TK. I' || v === 'UD TK. II' || v === 'REMED UD TK. I' || v === 'REMED UD TK. II');

                setDisabled(upkpFields, !isUPKP, true);
                setDisabled(udFields, !isUD, true);
            }

            jenis.addEventListener('change', updateFieldState);
            // panggil sekali saat awal
            updateFieldState();
        })();

        // ====== Validasi sederhana (opsional, Bootstrap 4 style) ======
        (function () {
            const form = document.getElementById('formInputBaru');
            form.addEventListener('submit', function (e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
            });
        })();
    </script>

    <script>
        $(function () {
            // Fungsi untuk mengatur aktif/nonaktif field
            function toggleFieldsByJenis(jenis) {
                jenis = String(jenis || '').toUpperCase();

                const isUPKP = jenis.includes('UPKP');
                const isUD = jenis.includes('UD');

                // Field UPKP
                $('#nilaiTertinggiUpkp, #nilaiTerendahUpkp').prop('disabled', !isUPKP);
                // Field UD
                $('#jumlahLulusUd, #jumlahTidakLulusUd').prop('disabled', !isUD);
            }

            // Ketika dropdown jenis ujian diubah manual
            $(document).on('change', 'select[name="jenis_ujian"]', function () {
                const jenis = $(this).val();
                toggleFieldsByJenis(jenis);
            });

            // Ketika tombol edit diklik
            $(document).on('click', '.btn-edit', function (e) {
                e.preventDefault();

                // ambil nilai dari tombol edit
                const jenis = $(this).data('jenis');
                $('select[name="jenis_ujian"]').val(jenis);

                // langsung aktifkan logika sesuai jenis ujian
                toggleFieldsByJenis(jenis);
            });

            // Pastikan juga form tambah sinkron tiap kali modal dibuka
            $('#inputDataModal').on('shown.bs.modal', function () {
                const jenis = $('select[name="jenis_ujian"]').val();
                toggleFieldsByJenis(jenis);
            });
        });
    </script>

    <!-- Core JS -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="js/sb-admin-2.min.js"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Chart.js -->
    <script src="vendor/chart.js/Chart.min.js"></script>
    <script src="js/demo/chart-pie-demo.js"></script>

    <!-- DataTables & Buttons -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.2/css/buttons.bootstrap4.min.css">
    <script src="vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="vendor/datatables/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.bootstrap4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/rowgroup/1.3.1/js/dataTables.rowGroup.min.js"></script>

    <!-- Chart Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <script>
        $(document).ready(function () {
            const $form = $('#formInputBaru');
            const $modal = $('#inputDataModal');
            const $table = $('#dataTable');
            const $petugasGroup = $('#petugasCatGroup');
            const $petugasFeedback = $('#petugasFeedback');

            /* ============================================================
               1️⃣  Inisialisasi DataTables (tanpa duplikasi)
            ============================================================ */
            const dtOptions = {
                paging: false,
                searching: false,
                ordering: false,
                info: false,
                responsive: true,
                autoWidth: false,
                language: {
                    zeroRecords: "Tidak ada data ditemukan",
                    infoEmpty: "Belum ada data",
                }
            };
            if ($.fn.DataTable.isDataTable($table)) $table.DataTable().destroy();
            let dt = $table.DataTable(dtOptions);

            /* ============================================================
               3️⃣  Petugas CAT Dinamis
            ============================================================ */
            function createPetugasInput(index, value = '') {
                return `
            <div class="mb-2" data-role="petugas-item">
                <input type="text" class="form-control" name="petugas_cat[]" 
                       placeholder="Nama Pegawai ${index}" value="${value}" required>
            </div>`;
            }
            function refreshPetugasPlaceholders() {
                $petugasGroup.find('input').each((i, el) => $(el).attr('placeholder', `Nama Pegawai ${i + 1}`));
            }
            $('#btnAddPetugas').click(() => {
                const count = $petugasGroup.find('[data-role="petugas-item"]').length;
                $petugasGroup.append(createPetugasInput(count + 1));
            });
            $('#btnRemovePetugas').click(() => {
                const items = $petugasGroup.find('[data-role="petugas-item"]');
                if (items.length > 1) items.last().remove();
            });

            /* ============================================================
               4️⃣  Enable/Disable Field berdasarkan Jenis Ujian
            ============================================================ */
            const jenis = document.getElementById('jenisUjian');
            const upkpFields = [$('#nilaiTertinggiUpkp'), $('#nilaiTerendahUpkp')];
            const udFields = [$('#jumlahLulusUd'), $('#jumlahTidakLulusUd')];
            function updateFieldState() {
                const v = jenis.value;
                const isUPKP = (v === 'UPKP' || v === 'REMED UPKP');
                const isUD = ['UD TK. I', 'UD TK. II', 'REMED UD TK. I', 'REMED UD TK. II'].includes(v);
                upkpFields.forEach(f => f.prop('disabled', !isUPKP));
                udFields.forEach(f => f.prop('disabled', !isUD));
            }
            $(jenis).on('change', updateFieldState);
            updateFieldState();

            /* ============================================================
               5️⃣  Validasi Form Sebelum Submit
            ============================================================ */
            function validateForm() {
                let isValid = true;
                let firstInvalid = null;

                const namaInstansi = $('#nama_instansi');
                const tglPelaksanaan = $('#tgl_pelaksanaan');
                const statusPelaksanaan = $('#status_pelaksanaan');
                const linkDokumen = $('#link_dokumen');
                const petugasInputs = $('input[name="petugas_cat[]"]');

                // reset state error
                $('.is-invalid').removeClass('is-invalid');
                if (typeof $petugasFeedback !== 'undefined' && $petugasFeedback.length) {
                    $petugasFeedback.removeClass('active').text('');
                }

                function markInvalid(el, msg) {
                    isValid = false;
                    el.addClass('is-invalid');
                    el.parent().find('.invalid-feedback').text(msg).addClass('active');
                    if (!firstInvalid) firstInvalid = el[0];
                }

                // ✅ Wajib umum
                if (!namaInstansi.val().trim()) markInvalid(namaInstansi, 'Nama Instansi wajib diisi.');
                if (!tglPelaksanaan.val().trim()) markInvalid(tglPelaksanaan, 'Tanggal Pelaksanaan wajib diisi.');
                if (!statusPelaksanaan.val().trim()) markInvalid(statusPelaksanaan, 'Status Pelaksanaan wajib dipilih.');

                // ✅ Link GDrive: BOLEH KOSONG untuk tambah & edit; kalau DIISI harus valid
                const linkVal = linkDokumen.val().trim();
                // lebih longgar: terima http/https dan berbagai pola share link
                const isGDrive = /^https?:\/\/drive\.google\.com\//.test(linkVal)
                    || /^https?:\/\/docs\.google\.com\/(spreadsheets|document|presentation)\//.test(linkVal);

                if (linkVal && !isGDrive) {
                    markInvalid(linkDokumen, 'Jika diisi, gunakan URL Google Drive/Docs yang valid.');
                }

                // ✅ Minimal 1 petugas
                if (![...petugasInputs].some(input => input.value.trim())) {
                    if (typeof $petugasFeedback !== 'undefined' && $petugasFeedback.length) {
                        $petugasFeedback.text('Minimal 1 nama Petugas CAT harus diisi.').addClass('active');
                    }
                    isValid = false;
                }

                if (!isValid && firstInvalid) {
                    firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    firstInvalid.focus();
                }

                return isValid;
            }



            /* ============================================================
               6️⃣  Submit Form (Tambah/Edit)
            ============================================================ */
            $form.off('submit').on('submit', async function (e) {
                e.preventDefault();
                if (!validateForm()) return;

                const formData = new FormData(this);
                const actionUrl = $form.attr('action') || '/tambah';

                try {
                    const res = await fetch(actionUrl, { method: 'POST', body: formData });
                    const data = await res.json();

                    if (data.status === "warning") {
                        Swal.fire({ icon: "warning", title: data.title, html: data.html || data.message });
                    } else if (data.status === "success") {
                        $modal.modal('hide');
                        Swal.fire({
                            icon: "success", title: data.title, text: data.message,
                        }).then(() => location.reload());
                    } else {
                        Swal.fire({ icon: "error", title: data.title || "Gagal", html: data.message });
                    }
                } catch (err) {
                    console.error(err);
                    Swal.fire("Kesalahan Server", "Terjadi kesalahan saat menyimpan data.", "error");
                }
            });

            /* ============================================================
               7️⃣  Tombol Edit
            ============================================================ */
            $(document).off('click', '.btn-edit').on('click', '.btn-edit', function (e) {
                e.preventDefault();
                const $btn = $(this);
                $form[0].reset();
                $form.attr('action', '/update/' + $btn.data('id'));
                $('#inputDataLabel').text('Edit Data UDKP');

                $('input[name="nama_instansi"]').val($btn.data('instansi'));
                $('input[name="tgl_pelaksanaan"]').val($btn.data('tanggal'));
                $('select[name="status_pelaksanaan"]').val($btn.data('status'));
                $('input[name="link_dokumen"]').val($btn.data('dokumen'));

                $petugasGroup.empty();
                const petugas = ($btn.data('petugas') || '').toString().trim();
                if (petugas) petugas.split(',').forEach((p, i) => $petugasGroup.append(createPetugasInput(i + 1, p.trim())));
                else $petugasGroup.append(createPetugasInput(1));

                $modal.modal('show');
            });

            /* ============================================================
               8️⃣  Tombol Hapus
            ============================================================ */
            $(document).off('click.delete').on('click.delete', '.btn-delete', async function (e) {
                e.preventDefault();
                const id = $(this).data('id');
                if (!id) return Swal.fire("Error", "ID data tidak ditemukan.", "error");

                const result = await Swal.fire({
                    title: "Yakin ingin menghapus data ini?",
                    text: "Data yang dihapus tidak dapat dikembalikan.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Ya, hapus",
                    cancelButtonText: "Batal",
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#6c757d"
                });
                if (!result.isConfirmed) return;

                try {
                    const res = await fetch(`/hapus/${id}`, { method: "DELETE" });
                    const data = await res.json();
                    if (res.ok && data.success) {
                        await Swal.fire({
                            icon: "success", title: "Berhasil!", text: `${data.deleted} data berhasil dihapus.`,
                        });
                        location.reload();
                    } else {
                        Swal.fire("Gagal", data.message || "Data gagal dihapus.", "error");
                    }
                } catch (err) {
                    Swal.fire("Kesalahan Server", "Terjadi kesalahan saat menghapus data.", "error");
                }
            });

            /* ============================================================
               9️⃣  Reset Modal saat Ditutup
            ============================================================ */
            $modal.on('hidden.bs.modal', function () {
                $form[0].reset();
                $form.attr('action', '/tambah');
                $('#inputDataLabel').text('Input Data Baru');
                $petugasGroup.empty().append(createPetugasInput(1));
                $form.find('.is-invalid, .is-valid').removeClass('is-invalid is-valid');
                if ($petugasFeedback.length) $petugasFeedback.removeClass('active').text('');
            });
        });
    </script>

    <script>
        $('#inputDataModal').on('hidden.bs.modal', function () {
            const form = document.getElementById('formInputBaru');
            form.reset();
            form.action = '/tambah';
            document.getElementById('inputDataLabel').textContent = "Input Data Baru";
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.textContent = "Simpan";
        });
    </script>
    <script>
        $(function () {
            const $modal = $('#inputDataModal');
            const $form = $('#formInputBaru');
            const $label = $('#inputDataLabel');
            const $submitBtn = $modal.find('button[type="submit"]');
            const $petugasGroup = $('#petugasCatGroup');
            const $petugasFeedback = $('#petugasFeedback');

            // 🔁 Reset form
            function resetFormState(mode = 'add') {
                $form[0].reset();
                $form.find('.is-invalid, .is-valid').removeClass('is-invalid is-valid');
                $form.find('.invalid-feedback.active, .valid-feedback.active').removeClass('active');
                if ($petugasFeedback.length) $petugasFeedback.removeClass('active').text('');

                $petugasGroup.empty().append(`
          <div class="mb-2" data-role="petugas-item">
            <input type="text" class="form-control" name="petugas_cat[]" placeholder="Nama Pegawai 1" required>
          </div>
        `);

                if (mode === 'add') {
                    $label.text('Input Data Baru');
                    $form.attr('action', '/tambah');
                    $submitBtn.text('Simpan');
                } else {
                    $label.text('Edit Data UDKP');
                    $submitBtn.text('Perbarui');
                }
            }



        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Ketika tombol edit ditekan
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault();
                e.stopPropagation();

                // Tutup modal input kalau kebuka
                $('#inputDataModal').modal('hide');

                // Ambil data dari tombol
                const idGroup = $(this).data('group-id');
                const instansi = $(this).data('instansi');
                const tanggal = $(this).data('tanggal');
                const status = $(this).data('status');
                const dokumen = $(this).data('dokumen');
                const petugas = $(this).data('petugas');

                const jumlahUpkp = $(this).data('jumlah-upkp');
                const jumlahUd1 = $(this).data('jumlah-ud1');
                const jumlahUd2 = $(this).data('jumlah-ud2');
                const jumlahRemedUpkp = $(this).data('jumlah-remed-upkp');
                const jumlahRemedUd1 = $(this).data('jumlah-remed-ud1');
                const jumlahRemedUd2 = $(this).data('jumlah-remed-ud2');

                const nilaiTertinggiUpkp = $(this).data('nilai-tertinggi');
                const nilaiTerendahUpkp = $(this).data('nilai-terendah');
                const nilaiTertinggiRemed = $(this).data('nilai-tertinggi-remed');
                const nilaiTerendahRemed = $(this).data('nilai-terendah-remed');

                const lulusUd1 = $(this).data('lulus-ud1');
                const tidakLulusUd1 = $(this).data('tidak-lulus-ud1');
                const lulusUd2 = $(this).data('lulus-ud2');
                const tidakLulusUd2 = $(this).data('tidak-lulus-ud2');
                const lulusRemedUd1 = $(this).data('lulus-remed-ud1');
                const tidakLulusRemedUd1 = $(this).data('tidak-lulus-remed-ud1');
                const lulusRemedUd2 = $(this).data('lulus-remed-ud2');
                const tidakLulusRemedUd2 = $(this).data('tidak-lulus-remed-ud2');

                // Masukkan ke dalam modal edit
                $("#edit_group_id").val(idGroup);
                $("#edit_nama_instansi").val(instansi);
                $("#edit_tgl_pelaksanaan").val(tanggal);
                $("#edit_status_pelaksanaan").val(status);
                $("#edit_link_dokumen").val(dokumen);

                // Isi field jumlah peserta
                $("input[name='jumlah_peserta_0']").val(jumlahUpkp);
                $("input[name='jumlah_peserta_1']").val(jumlahUd1);
                $("input[name='jumlah_peserta_2']").val(jumlahUd2);
                $("input[name='jumlah_peserta_3']").val(jumlahRemedUpkp);
                $("input[name='jumlah_peserta_4']").val(jumlahRemedUd1);
                $("input[name='jumlah_peserta_5']").val(jumlahRemedUd2);

                // Nilai UPKP
                $("input[name='nilai_tertinggi_0']").val(nilaiTertinggiUpkp);
                $("input[name='nilai_terendah_0']").val(nilaiTerendahUpkp);
                $("input[name='nilai_tertinggi_3']").val(nilaiTertinggiRemed);
                $("input[name='nilai_terendah_3']").val(nilaiTerendahRemed);

                // Nilai lulus/tidak lulus UD
                $("input[name='jumlah_lulus_pg_1']").val(lulusUd1);
                $("input[name='jumlah_tidak_lulus_pg_1']").val(tidakLulusUd1);
                $("input[name='jumlah_lulus_pg_2']").val(lulusUd2);
                $("input[name='jumlah_tidak_lulus_pg_2']").val(tidakLulusUd2);
                $("input[name='jumlah_lulus_pg_4']").val(lulusRemedUd1);
                $("input[name='jumlah_tidak_lulus_pg_4']").val(tidakLulusRemedUd1);
                $("input[name='jumlah_lulus_pg_5']").val(lulusRemedUd2);
                $("input[name='jumlah_tidak_lulus_pg_5']").val(tidakLulusRemedUd2);

                // Petugas CAT (jika ada field dinamis)
                $("#editPetugasCatGroup").html("");
                if (petugas) {
                    const arrPetugas = petugas.split(",").map(p => p.trim());
                    arrPetugas.forEach((nama, i) => {
                        $("#editPetugasCatGroup").append(`
                    <input type="text" name="petugas_cat_${i}" value="${nama}" class="form-control mb-2">
                `);
                    });
                }

                // Tampilkan modal
                $('#editDataModal').modal('show');
            });
        });

    </script>
    <script>
        $(document).on('click', '.btn-edit', function () {
            const btn = $(this);
            const groupId = btn.data('group-id');

            // Atur action form sesuai route Express
            $('#formEditData').attr('action', `/update/${groupId}`);

            // Isi input lain seperti biasa...
            $('#edit_group_id').val(groupId);
            $('#edit_nama_instansi').val(btn.data('instansi'));
            $('#edit_tgl_pelaksanaan').val(btn.data('tanggal'));
            $('#edit_status_pelaksanaan').val(btn.data('status'));
            $('#edit_link_dokumen').val(btn.data('dokumen'));

            // Petugas, dll...
            const petugas = btn.data('petugas')?.split(',') || [''];
            const container = document.getElementById('editPetugasCatGroup');
            container.innerHTML = '';
            petugas.forEach((nama, i) => {
                const input = document.createElement('input');
                input.type = 'text';
                input.classList.add('form-control', 'mb-2');
                input.name = `petugas_cat`;
                input.value = nama.trim();
                container.appendChild(input);
            });

            $('#editDataModal').modal('show');
        });

    </script>
    <script>
        $(document).ready(function () {
            $('#formEditData').on('submit', function (e) {
                e.preventDefault();

                const form = $(this);
                const actionUrl = form.attr('action');

                // ambil status yang dipilih di modal edit
                const status = ($('#edit_status_pelaksanaan').val() || '').trim();

                // ambil semua field jumlah & nilai dari modal edit
                const jmlUPKP = Number($("input[name='jumlah_peserta_0']").val() || 0);
                const jmlUD1 = Number($("input[name='jumlah_peserta_1']").val() || 0);
                const jmlUD2 = Number($("input[name='jumlah_peserta_2']").val() || 0);
                const jmlRemUPKP = Number($("input[name='jumlah_peserta_3']").val() || 0);
                const jmlRemUD1 = Number($("input[name='jumlah_peserta_4']").val() || 0);
                const jmlRemUD2 = Number($("input[name='jumlah_peserta_5']").val() || 0);

                const maxUPKP = $("input[name='nilai_tertinggi_0']").val();
                const minUPKP = $("input[name='nilai_terendah_0']").val();
                const maxRemUPKP = $("input[name='nilai_tertinggi_3']").val();
                const minRemUPKP = $("input[name='nilai_terendah_3']").val();

                const lulusUD1 = $("input[name='jumlah_lulus_pg_1']").val();
                const gagalUD1 = $("input[name='jumlah_tidak_lulus_pg_1']").val();
                const lulusUD2 = $("input[name='jumlah_lulus_pg_2']").val();
                const gagalUD2 = $("input[name='jumlah_tidak_lulus_pg_2']").val();
                const lulusRemUD1 = $("input[name='jumlah_lulus_pg_4']").val();
                const gagalRemUD1 = $("input[name='jumlah_tidak_lulus_pg_4']").val();
                const lulusRemUD2 = $("input[name='jumlah_lulus_pg_5']").val();
                const gagalRemUD2 = $("input[name='jumlah_tidak_lulus_pg_5']").val();

                if (status === 'Selesai') {
                    let msgs = [];

                    // UPKP & REMED UPKP: jika ada peserta >0, wajib isi max & min
                    if (jmlUPKP > 0 && (!maxUPKP || !minUPKP)) msgs.push('• UPKP: isi Nilai Tertinggi & Nilai Terendah');
                    if (jmlRemUPKP > 0 && (!maxRemUPKP || !minRemUPKP)) msgs.push('• REMED UPKP: isi Nilai Tertinggi & Nilai Terendah');

                    // UD TK I/II (+ Remed): jika ada peserta >0, wajib isi lulus & tidak lulus
                    if (jmlUD1 > 0 && (!lulusUD1 || !gagalUD1)) msgs.push('• UD TK. I: isi Jumlah Lulus & Tidak Lulus');
                    if (jmlUD2 > 0 && (!lulusUD2 || !gagalUD2)) msgs.push('• UD TK. II: isi Jumlah Lulus & Tidak Lulus');
                    if (jmlRemUD1 > 0 && (!lulusRemUD1 || !gagalRemUD1)) msgs.push('• REMED UD TK. I: isi Jumlah Lulus & Tidak Lulus');
                    if (jmlRemUD2 > 0 && (!lulusRemUD2 || !gagalRemUD2)) msgs.push('• REMED UD TK. II: isi Jumlah Lulus & Tidak Lulus');

                    if (msgs.length) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Belum bisa diselesaikan',
                            html: `<p>Untuk mengubah status menjadi <b>Selesai</b>, lengkapi dulu kolom berikut:</p>
                   <div>${msgs.join('<br>')}</div>`
                        });
                        return; // stop submit
                    }
                }

                // lanjut submit (pakai serialize untuk form urlencoded)
                $.ajax({
                    url: actionUrl,
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        Swal.fire({
                            icon: response.status || 'success',
                            title: response.title || 'Berhasil!',
                            html: response.html || '<p>Data berhasil diperbarui.</p>',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            if (response.status === 'success') {
                                $('#editDataModal').modal('hide');
                                location.reload();
                            }
                        });
                    },
                    error: function () {
                        Swal.fire({ icon: 'error', title: 'Gagal!', html: '<p>Terjadi kesalahan saat menyimpan data.</p>' });
                    }
                });
            });
        });
    </script>



    <script>
        $(document).off('submit', '#formInputBaru').on('submit', '#formInputBaru', async function (e) {
            e.preventDefault();
            console.log("🚀 Submit aktif!");

            const $form = $(this);
            const formData = new FormData(this);
            const actionUrl = $form.attr('action') || '/tambah';

            // 🔹 Validasi sederhana
            const namaInstansi = $('#nama_instansi').val().trim();
            const tglPelaksanaan = $('#tgl_pelaksanaan').val().trim();
            const statusPelaksanaan = $('#status_pelaksanaan').val(); // ganti sesuai ID select kamu
            const linkDokumen = $('#link_dokumen').val().trim();

            if (!namaInstansi || !tglPelaksanaan || !statusPelaksanaan) {
                Swal.fire({
                    icon: "warning",
                    title: "Form belum lengkap",
                    text: "Pastikan semua kolom wajib diisi.",
                    confirmButtonColor: "#fbc02d"
                });
                return;
            }

            try {
                // Kirim ke backend via fetch
                const res = await fetch(actionUrl, { method: 'POST', body: formData });
                const text = await res.text(); // backend kadang kirim text/html
                console.log("📦 Response:", text);
                let data;
                try {
                    data = JSON.parse(text);
                } catch {
                    Swal.fire({
                        icon: "error",
                        title: "Kesalahan Server",
                        text: "Server tidak mengembalikan format JSON yang valid."
                    });
                    return;
                }

                // 🔔 Tampilkan SweetAlert sesuai response
                if (data.status === "success") {
                    $('#inputDataModal').modal('hide');
                    Swal.fire({
                        icon: "success",
                        title: data.title || "Berhasil",
                        html: data.html || data.message || "Data berhasil disimpan.",
                        confirmButtonColor: "#28a745"
                    }).then(() => location.reload());
                } else if (data.status === "warning") {
                    Swal.fire({
                        icon: "warning",
                        title: data.title || "Peringatan",
                        html: data.html || data.message,
                        confirmButtonColor: "#fbc02d"
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: data.title || "Gagal",
                        html: data.html || data.message || "Terjadi kesalahan.",
                        confirmButtonColor: "#d33"
                    });
                }
            } catch (err) {
                console.error("❌ Error fetch:", err);
                Swal.fire({
                    icon: "error",
                    title: "Kesalahan Server",
                    text: "Terjadi kesalahan saat mengirim data."
                });
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            console.log("✅ Script delete di-load");

            // Pastikan SweetAlert sudah ada
            if (typeof Swal === "undefined") {
                console.error("SweetAlert2 belum terload!");
                return;
            }

            // Pasang handler delete global
            $(document).off("click.delete").on("click.delete", ".btn-delete", async function (e) {
                e.preventDefault();
                const id = $(this).data("id");
                console.log("🗑 Tombol hapus diklik, ID:", id);

                if (!id) {
                    Swal.fire("Error", "ID data tidak ditemukan.", "error");
                    return;
                }

                const result = await Swal.fire({
                    title: "Yakin ingin menghapus data ini?",
                    text: "Data yang dihapus tidak dapat dikembalikan.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Ya, hapus",
                    cancelButtonText: "Batal",
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#6c757d"
                });

                if (!result.isConfirmed) return;

                try {
                    const res = await fetch(`/hapus/${id}`, { method: "DELETE" });
                    const data = await res.json();

                    if (res.ok && data.success) {
                        console.log(`✅ Berhasil hapus ${data.deleted} data`);
                        await Swal.fire({
                            icon: "success",
                            title: "Berhasil!",
                            text: `${data.deleted} data berhasil dihapus.`,
                            confirmButtonText: "OK",
                            confirmButtonColor: "#28a745"
                        });
                        location.reload();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Gagal!",
                            text: data.message || "Data gagal dihapus."
                        });
                    }
                } catch (err) {
                    console.error("❌ Error fetch hapus:", err);
                    Swal.fire("Kesalahan Server", "Terjadi kesalahan saat menghapus data.", "error");
                }
            });

            console.log("🔗 Event delete terpasang");
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>

   <script>
    document.getElementById('btnExportPDF').addEventListener('click', async () => {
        const table = document.querySelector('#dataTable');
        const headerCells = Array.from(table.querySelectorAll('thead tr th'));

        // === Index kolom ===
        const aksiIndex = headerCells.length - 1;
        const dokIndex = headerCells.findIndex(th => th.innerText.trim().toLowerCase().includes('dokumen'));
        const tglIndex = headerCells.findIndex(th => th.innerText.trim().toLowerCase().includes('tanggal pelaksanaan'));
        const pesertaIdx = headerCells.findIndex(th => th.innerText.trim().toLowerCase().includes('jumlah peserta'));
        const lulusIdx = headerCells.findIndex(th => th.innerText.trim().toLowerCase().includes('lulus pg'));
        const tidakIdx = headerCells.findIndex(th => th.innerText.trim().toLowerCase().includes('tidak lulus'));

        // 🔹 Sembunyikan kolom "Aksi"
        document.querySelectorAll('#dataTable tr').forEach(row => {
            if (row.children[aksiIndex]) row.children[aksiIndex].style.display = 'none';
        });

        // === 1. Ambil periode dari kolom tanggal ===
        const tanggalList = Array.from(document.querySelectorAll('#dataTable tbody tr'))
            .map(row => {
                const cell = row.children[tglIndex];
                if (!cell) return null;
                const clean = (cell.innerText || "").trim().replace(/[^\d-]/g, "");
                const parts = clean.split("-");
                if (parts.length === 3) {
                    const [y, m, d] = parts.map(Number);
                    if (!isNaN(y) && !isNaN(m) && !isNaN(d)) return new Date(y, m - 1, d);
                }
                return null;
            })
            .filter(Boolean)
            .sort((a, b) => a - b);

        let periodeText = "";
        if (tanggalList.length > 0) {
            const earliest = tanggalList[0];
            const latest = tanggalList[tanggalList.length - 1];
            const bulan = ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];
            const b1 = bulan[earliest.getMonth()], b2 = bulan[latest.getMonth()];
            const y1 = earliest.getFullYear(), y2 = latest.getFullYear();
            periodeText = (y1 === y2)
                ? (b1 === b2 ? `${b1} ${y1}` : `${b1} – ${b2} ${y1}`)
                : `${b1} ${y1} – ${b2} ${y2}`;
        } else {
            periodeText = `Tahun ${new Date().getFullYear()}`;
        }

        // === 2. Ambil link dokumen untuk hyperlink ===
        const dokumenLinks = [];
        document.querySelectorAll('#dataTable tbody tr').forEach(row => {
            const cell = row.children[dokIndex];
            const a = cell ? cell.querySelector('a') : null;
            dokumenLinks.push(a ? a.href : null);
        });

        // === 3. Ambil total dari baris footer (lebih akurat) ===
        const totalRow = table.querySelector('tfoot tr');
        let totalPeserta = 0, totalLulus = 0, totalTidak = 0;
        const num = v => Number(String(v).replace(/[^\d.-]/g, '')) || 0;

        if (totalRow) {
            const cells = totalRow.children;
            totalPeserta = num(cells[pesertaIdx]?.innerText);
            totalLulus = num(cells[lulusIdx]?.innerText);
            totalTidak = num(cells[tidakIdx]?.innerText);
        } else {
            // fallback kalau tfoot belum ada
            table.querySelectorAll('tbody tr').forEach(tr => {
                const cells = tr.children;
                if (cells[pesertaIdx]) totalPeserta += num(cells[pesertaIdx].innerText);
                if (cells[lulusIdx]) totalLulus += num(cells[lulusIdx].innerText);
                if (cells[tidakIdx]) totalTidak += num(cells[tidakIdx].innerText);
            });
        }

        // === 4. Buat <tfoot> sementara untuk export PDF ===
        const tempTFoot = table.tFoot || table.createTFoot();
        const footRow = document.createElement('tr');
        for (let i = 0; i < headerCells.length; i++) {
            const td = document.createElement('td');
            td.style.fontWeight = '700';
            td.style.background = '#39a37c';
            td.style.color = '#ffffff';
            if (i === 0) td.textContent = 'TOTAL';
            if (i === pesertaIdx) td.textContent = totalPeserta;
            if (i === lulusIdx) td.textContent = totalLulus;
            if (i === tidakIdx) td.textContent = totalTidak;
            footRow.appendChild(td);
        }
        tempTFoot.innerHTML = '';
        tempTFoot.appendChild(footRow);

        const { jsPDF } = window.jspdf;
        const doc = new jsPDF({ orientation: 'landscape', unit: 'pt', format: 'a4' });

        // === 5. Judul ===
        doc.setFontSize(14);
        doc.setFont("helvetica", "bold");
        doc.text(`Rekapitulasi Pelaksanaan Uji Kompetensi ${periodeText}`, 420, 40, { align: 'center' });

        // 🔹 Ubah sementara semua elemen <select> atau <input> dalam tabel jadi teks
        const formCells = [];
        table.querySelectorAll('select, input').forEach(el => {
            const cell = el.closest('td');
            if (!cell) return;
            formCells.push({ cell, original: cell.innerHTML });

            // ambil value terpilih
            let text = '';
            if (el.tagName === 'SELECT') {
                text = el.options[el.selectedIndex]?.text || el.value || '';
            } else {
                text = el.value || '';
            }

            // ganti isi cell dengan teksnya saja
            cell.textContent = text.trim() || '-';
        });

        // === 6. Tabel utama ===
        doc.autoTable({
            html: '#dataTable',
            startY: 60,
            theme: 'grid',
            styles: { fontSize: 8, halign: 'center', valign: 'middle', lineColor: [0, 0, 0], lineWidth: 0.1 },
            headStyles: { fillColor: [230, 230, 230], textColor: [0, 0, 0], fontStyle: 'bold' },
            footStyles: { fillColor: [230, 230, 230], textColor: [0, 0, 0], fontStyle: 'bold' },
            showFoot: 'lastPage',
            didDrawCell: (data) => {
                if (data.section === 'body' && data.column.index === dokIndex) {
                    const url = dokumenLinks[data.row.index];
                    if (url) {
                        doc.link(
                            data.cell.x + 2,
                            data.cell.y + 2,
                            data.cell.width - 4,
                            data.cell.height - 4,
                            { url }
                        );
                    }
                }
            }
        });
        // 🔹 Kembalikan isi cell form seperti sebelum export
        formCells.forEach(({ cell, original }) => (cell.innerHTML = original));

        let currentY = doc.lastAutoTable.finalY + 30;

        // === 7. Rekap per Instansi ===
        const rekapTable = document.querySelector('#rekapContainer table');
        if (rekapTable) {
            doc.setFontSize(12);
            doc.setFont("helvetica", "bold");
            doc.text("Rekap Jumlah Ujian per Instansi", 420, currentY - 10, { align: "center" });

            doc.autoTable({
                html: rekapTable,
                startY: currentY,
                theme: 'grid',
                styles: { fontSize: 8, halign: 'center', valign: 'middle' },
                headStyles: { fillColor: [150, 150, 150], textColor: [255, 255, 255] }
            });
            currentY = doc.lastAutoTable.finalY + 30;
        }

        // === 8. Ringkasan Jumlah (Card Section) ===
        try {
            const cardCols = document.querySelectorAll('.col-md-2.mb-3, .col-md-3.mb-3');
            if (cardCols.length > 0) {
                const tempContainer = document.createElement('div');
                tempContainer.style.display = 'flex';
                tempContainer.style.flexWrap = 'wrap';
                tempContainer.style.justifyContent = 'center';
                tempContainer.style.gap = '12px';
                tempContainer.style.padding = '10px';
                tempContainer.style.width = '1000px';

                cardCols.forEach(card => {
                    const clone = card.cloneNode(true);
                    clone.style.flex = '1 1 18%';
                    tempContainer.appendChild(clone);
                });

                document.body.appendChild(tempContainer);
                const cardCanvas = await html2canvas(tempContainer, { scale: 2, backgroundColor: '#ffffff' });
                const cardImg = cardCanvas.toDataURL('image/png', 1.0);
                document.body.removeChild(tempContainer);

                const imgWidth = 720;
                const imgHeight = (cardCanvas.height / cardCanvas.width) * imgWidth;

                if (currentY + imgHeight > 520) { doc.addPage(); currentY = 60; }

                doc.setFontSize(12);
                doc.text("Ringkasan Jumlah (Dashboard Summary)", 420, currentY - 10, { align: 'center' });
                doc.addImage(cardImg, 'PNG', 50, currentY, imgWidth, imgHeight);
                currentY += imgHeight + 40;
            }
        } catch (err) {
            console.warn("⚠️ Gagal render card summary:", err);
        }

        // === 9. Grafik Bar & Pie (sejajar) ===
        try {
            const chart1 = document.getElementById('chartNilaiIndex');
            const chart2 = document.getElementById('chartLulusIndex');
            if (chart1 && chart2) {
                const img1 = chart1.toDataURL('image/png', 1.0);
                const img2 = chart2.toDataURL('image/png', 1.0);
                const pdfW = doc.internal.pageSize.getWidth();
                const chartW = (pdfW - 80) / 2;
                const chartH = 130;

                if (currentY + chartH > 520) { doc.addPage(); currentY = 60; }

                doc.text("Grafik Nilai UPKP & Lulus PG", 420, currentY - 10, { align: 'center' });
                doc.addImage(img1, 'PNG', 30, currentY, chartW, chartH);
                doc.addImage(img2, 'PNG', 50 + chartW, currentY, chartW, chartH);
            }
        } catch (err) {
            console.warn("⚠️ Gagal render grafik:", err);
        }

        // === 10. Kembalikan tampilan kolom "Aksi" ===
        document.querySelectorAll('#dataTable tr').forEach(row => {
            if (row.children[aksiIndex]) row.children[aksiIndex].style.display = '';
        });

        // === 11. Simpan PDF ===
        const now = new Date();
        const namaFile = `Laporan_UDKP.pdf`;
        doc.save(namaFile);
    });
</script>

    <script>
        $(function () {
            const $table = $('#dataTable');
            const $tbody = $table.find('tbody');

            function clearHighlight() {
                $tbody.find('tr').removeClass('row-highlight').css('opacity', '1');
                $tbody.find('td').removeClass('cell-highlight')
                    .css({ backgroundColor: '', fontWeight: '' });
            }

            function toNumber(v) {
                if (v === undefined || v === null) return NaN;
                return parseFloat(String(v).replace(/[^\d.-]/g, ''));
            }

            // ✅ Deteksi baris UPKP TANPA bergantung index kolom (aman terhadap rowspan)
            function isUPKPRow($tr) {
                return $tr.text().toUpperCase().includes('UPKP'); // UPKP & REMED UPKP ikut
            }

            // Kumpulkan semua kandidat nilai (value + referensi row & cell)
            function collectCandidates(mode) {
                const items = [];
                $tbody.find('tr').each(function () {
                    const $tr = $(this);
                    if (!isUPKPRow($tr)) return;

                    // ambil sel nilai via data-attribute (fallback ke kelas kolom jika perlu)
                    let $cell = (mode === 'highest')
                        ? $tr.find('td[data-nilai-tertinggi]')
                        : $tr.find('td[data-nilai-terendah]');
                    if ($cell.length === 0) {
                        $cell = (mode === 'highest')
                            ? $tr.find('td.col-nilai-tertinggi')
                            : $tr.find('td.col-nilai-terendah');
                    }
                    if ($cell.length === 0) return;

                    const raw = (mode === 'highest')
                        ? $cell.attr('data-nilai-tertinggi')
                        : $cell.attr('data-nilai-terendah');
                    const val = toNumber(raw ?? $cell.text());
                    if (isNaN(val)) return;

                    items.push({ val, $tr, $cell });
                });
                return items;
            }

            $('#filterAction').off('change.quick').on('change.quick', function () {
                const mode = this.value; // 'highest' | 'lowest' | ''
                clearHighlight();
                if (!mode) return;

                const items = collectCandidates(mode);
                if (items.length === 0) return;

                // ✅ Cari nilai terbaik secara pasti (menghindari efek loop/skipped row)
                const bestVal = items.reduce((acc, it) => {
                    if (acc === null) return it.val;
                    return (mode === 'highest') ? Math.max(acc, it.val) : Math.min(acc, it.val);
                }, null);

                // Sorot semua baris yang bernilai sama dengan bestVal (kalau ada lebih dari satu)
                items.forEach(({ val, $tr, $cell }) => {
                    if (val !== bestVal) return;
                    $tbody.find('tr').not($tr).css('opacity', '0.4');
                    $tr.addClass('row-highlight');
                    $tr.find('td').css({
                        backgroundColor: mode === 'highest' ? '#fff3cd' : '#d6f5fa',
                        fontWeight: '700'
                    });
                    $cell.addClass('cell-highlight');
                    $tr[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                });
            });
        });
    </script>

    <script>
        $(document).on('click', '.btn-input-nilai', async function () {
            const groupId = $(this).data('group-id');
            if (!groupId) return Swal.fire("Error", "Group ID tidak ditemukan.", "error");

            try {
                const res = await fetch(`/get-nilai/${groupId}`);
                if (!res.ok) throw new Error("Gagal mengambil data nilai.");
                const data = await res.json();

                let html = '';
                if (Array.isArray(data) && data.length > 0) {
                    html += `
         <form id="formInputNilai" data-group-id="${groupId}">
        <table class="table table-bordered table-sm">
          <thead class="table-success">
            <tr>
              <th>Jenis Ujian</th>
              <th>Nilai Tertinggi</th>
              <th>Nilai Terendah</th>
              <th>Jumlah Lulus</th>
              <th>Jumlah Tidak Lulus</th>
            </tr>
          </thead>
          <tbody>
      `;
                    data.forEach(r => {
                        const isUPKP = r.jenis_ujian.includes("UPKP"); // UPKP & REMED UPKP
                        const isUD = r.jenis_ujian.includes("UD TK");  // UD TK I/II & REMED-nya

                        html += `
    <tr>
      <td>${r.jenis_ujian}</td>

      <!-- Kolom Nilai Tertinggi -->
      <td>
        ${isUPKP
                                ? `<input type="number" class="form-control form-control-sm" 
                     name="nilai_tertinggi_${r.id}" 
                     value="${r.nilai_tertinggi_pg ?? ''}" min="0">`
                                : `<input type="number" class="form-control form-control-sm" 
                     name="nilai_tertinggi_${r.id}" 
                     value="${r.nilai_tertinggi_pg ?? ''}" min="0" disabled>`
                            }
      </td>

      <!-- Kolom Nilai Terendah -->
      <td>
        ${isUPKP
                                ? `<input type="number" class="form-control form-control-sm" 
                     name="nilai_terendah_${r.id}" 
                     value="${r.nilai_terendah_pg ?? ''}" min="0">`
                                : `<input type="number" class="form-control form-control-sm" 
                     name="nilai_terendah_${r.id}" 
                     value="${r.nilai_terendah_pg ?? ''}" min="0" disabled>`
                            }
      </td>

      <!-- Kolom Jumlah Lulus -->
      <td>
        <input type="number" 
          class="form-control form-control-sm" 
          name="jumlah_lulus_${r.id}" 
          value="${r.jumlah_lulus_pg ?? ''}" 
          ${isUPKP ? 'disabled' : ''}>
      </td>

      <!-- Kolom Jumlah Tidak Lulus -->
      <td>
        <input type="number" 
          class="form-control form-control-sm" 
          name="jumlah_tidak_lulus_${r.id}" 
          value="${r.jumlah_tidak_lulus_pg ?? ''}" 
          ${isUPKP ? 'disabled' : ''}>
      </td>
    </tr>
  `;
                    });


                    html += `
          </tbody></table>
          
        </form>`;
                } else {
                    html = `<div class="alert alert-info mb-0">Tidak ada jenis ujian yang memiliki peserta.</div>`;

                }

                const modalInputNilai = document.querySelector('#modalInputNilai');
                if (!modalInputNilai) {
                    console.error('Modal Input Nilai tidak ditemukan!');
                    return;
                }

                // pastikan selalu isi di dalam modal Input Nilai, bukan di edit
                $(modalInputNilai).find('#nilaiContent').html(html);
                $(modalInputNilai).find('#formInputNilai').attr('data-group-id', groupId);
                $(modalInputNilai).modal('show');

            } catch (err) {
                console.error(err);
                Swal.fire("Kesalahan", "Gagal memuat data nilai.", "error");
            }
        });
    </script>
    <script>
        $(document).on("submit", "#formInputNilai", async function (e) {
            e.preventDefault();

            const groupId = $(this).data("group-id");
            if (!groupId) {
                Swal.fire("Error", "Group ID tidak ditemukan.", "error");
                return;
            }

            // Kirim sebagai multipart/form-data agar cocok dengan upload.none()
            const fd = new FormData(this);

            try {
                const res = await fetch(`/update-nilai/${groupId}`, {
                    method: "POST",
                    body: fd,                // ⬅️ JANGAN set Content-Type manual
                });

                const result = await res.json();
                if (result.status === "success") {
                    Swal.fire({ icon: "success", title: "Berhasil", text: result.message || "Nilai berhasil diperbarui." });
                    $("#modalInputNilai").modal("hide");
                    setTimeout(() => location.reload(), 800);
                } else {
                    Swal.fire("Gagal", result.message || "Gagal menyimpan nilai.", "error");
                }
            } catch (err) {
                console.error("❌ Error fetch:", err);
                Swal.fire("Error", "Gagal menghubungi server.", "error");
            }
        });
    </script>


    <!-- setelah semua library -->
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const searchInput = document.getElementById("customSearch");
            const startDateInput = document.getElementById("startDate");
            const endDateInput = document.getElementById("endDate");
            const tableBody = document.querySelector("#tableBody");

            if (!tableBody) return;

            [searchInput, startDateInput, endDateInput].forEach(el => {
                el.addEventListener("input", debounce(searchData, 400));
            });

            async function searchData() {
                const q = (document.getElementById("customSearch")?.value || "").trim();
                const startDate = document.getElementById("startDate")?.value || "";
                const endDate = document.getElementById("endDate")?.value || "";
                const tableBody = document.querySelector("#tableBody");

                const params = new URLSearchParams({ q });

                // 🔹 Kalau dua-duanya diisi → range
                if (startDate && endDate) {
                    params.append("startDate", startDate);
                    params.append("endDate", endDate);
                }
                // 🔹 Kalau cuma satu → ambil bulan & tahun dari tanggal itu
                else if (startDate || endDate) {
                    const selected = startDate || endDate;
                    const [year, month] = selected.split("-");
                    params.append("year", year);
                    params.append("month", month);
                }

                try {
                    // 🔄 Ambil hasil pencarian
                    const res = await fetch(`/search?${params.toString()}`, {
                        headers: { "Accept": "application/json" }
                    });
                    const data = await res.json();

                    // 🧩 Update tabel utama
                    if (tableBody) {
                        tableBody.innerHTML = data.html;
                    }

                    // 📊 Update grafik dan ringkasan
                    renderCharts(data.groupedData);
                    updateSummaryCards(data.groupedData);

                    // 🧮 Update rekap per instansi (tanpa route /rekap)
                    loadRekapFromGrouped(data.groupedData);

                    // 🧾 Update footer total (peserta/lulus/tidak lulus)
                    document.dispatchEvent(new CustomEvent('ajaxTableUpdated', { detail: { groupedData: data.groupedData } }));

                } catch (err) {
                    console.error("❌ Gagal fetch data:", err);
                }
            }


            function debounce(func, delay) {
                let timeout;
                return (...args) => {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(this, args), delay);
                };
            }
        });
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", () => {
            console.log("✅ Search script aktif");

            const searchInput = document.getElementById("customSearch");
            const startDateInput = document.getElementById("startDate");
            const endDateInput = document.getElementById("endDate");
            const tableBody = document.querySelector("#tableBody"); // pastikan ini ID tbody kamu

            // fungsi debounce biar gak spam fetch
            function debounce(fn, delay = 500) {
                let timeout;
                return (...args) => {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => fn(...args), delay);
                };
            }

            // fungsi utama search
            const searchData = debounce(async () => {
                const q = searchInput.value.trim();
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;

                const params = new URLSearchParams({ q });
                if (startDate) params.append("startDate", startDate);
                if (endDate) params.append("endDate", endDate);

                console.log("🔍 Fetch:", `/search?${params.toString()}`);

                try {
                    const res = await fetch(`/search?${params.toString()}`, {
                        headers: { "Accept": "application/json" }
                    });
                    const data = await res.json();

                    // tampilkan hasil pencarian ke tabel
                    tableBody.innerHTML = data.html;

                    // perbarui grafik agar ikut hasil pencarian
                    renderCharts(data.groupedData);
                    updateSummaryCards(data.groupedData);

                    loadRekapFromGrouped(data.groupedData);
                } catch (err) {
                    console.error("❌ Error fetch:", err);
                }
            });

            // pasang event listener
            [searchInput, startDateInput, endDateInput].forEach(el =>
                el.addEventListener("input", searchData)
            );
        });
    </script>
    <script>
        async function clearFilter() {
            document.getElementById('customSearch').value = '';
            document.getElementById('startDate').value = '';
            document.getElementById('endDate').value = '';

            try {
                const res = await fetch(`/search`, { headers: { "Accept": "application/json" } });
                const data = await res.json();

                // Update tabel, grafik, kartu, dan rekap semuanya
                document.querySelector("#tableBody").innerHTML = data.html;
                renderCharts(data.groupedData);
                updateSummaryCards(data.groupedData);
                loadRekapFromGrouped(data.groupedData);
                applyRoleVisibility();
            } catch (err) {
                console.error("❌ Error reset:", err);
            }
        }


    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Simpan data tombol edit sementara
            let editDataTemp = null;

            // Ketika tombol edit diklik
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault();
                e.stopPropagation();

                const btn = $(this);

                // Simpan semua data tombol ke variabel sementara
                editDataTemp = {
                    groupId: btn.data('group-id'),
                    instansi: btn.data('instansi'),
                    tanggal: btn.data('tanggal'),
                    status: btn.data('status'),
                    dokumen: btn.data('dokumen'),
                    petugas: btn.data('petugas'),

                    jumlahUpkp: btn.data('jumlah-upkp'),
                    jumlahUd1: btn.data('jumlah-ud1'),
                    jumlahUd2: btn.data('jumlah-ud2'),
                    jumlahRemedUpkp: btn.data('jumlah-remed-upkp'),
                    jumlahRemedUd1: btn.data('jumlah-remed-ud1'),
                    jumlahRemedUd2: btn.data('jumlah-remed-ud2'),

                    nilaiTertinggiUpkp: btn.data('nilai-tertinggi'),
                    nilaiTerendahUpkp: btn.data('nilai-terendah'),
                    nilaiTertinggiRemed: btn.data('nilai-tertinggi-remed'),
                    nilaiTerendahRemed: btn.data('nilai-terendah-remed'),

                    lulusUd1: btn.data('lulus-ud1'),
                    tidakLulusUd1: btn.data('tidak-lulus-ud1'),
                    lulusUd2: btn.data('lulus-ud2'),
                    tidakLulusUd2: btn.data('tidak-lulus-ud2'),
                    lulusRemedUd1: btn.data('lulus-remed-ud1'),
                    tidakLulusRemedUd1: btn.data('tidak-lulus-remed-ud1'),
                    lulusRemedUd2: btn.data('lulus-remed-ud2'),
                    tidakLulusRemedUd2: btn.data('tidak-lulus-remed-ud2')
                };

                // Tampilkan modal edit
                $('#editDataModal').modal('show');
            });

            // Setelah modal tampil dan section nilai sudah dibuat
            $('#editDataModal').on('shown.bs.modal', function () {
                if (!editDataTemp) return;
                const d = editDataTemp;

                // === Isi field utama ===
                $("#edit_group_id").val(d.groupId);
                $("#edit_nama_instansi").val(d.instansi);
                $("#edit_tgl_pelaksanaan").val(d.tanggal);
                $("#edit_status_pelaksanaan").val(d.status);
                $("#edit_link_dokumen").val(d.dokumen);

                // === Isi petugas CAT ===
                const container = document.getElementById('editPetugasCatGroup');
                container.innerHTML = '';
                if (d.petugas) {
                    const arr = d.petugas.split(',').map(x => x.trim());
                    arr.forEach((nama, i) => {
                        const input = document.createElement('input');
                        input.type = 'text';
                        input.classList.add('form-control', 'mb-2');
                        input.name = `edit_petugas_${i + 1}`;
                        input.value = nama;
                        container.appendChild(input);
                    });
                }

                // === Isi jumlah peserta ===
                $("input[name='jumlah_peserta_0']").val(d.jumlahUpkp);
                $("input[name='jumlah_peserta_1']").val(d.jumlahUd1);
                $("input[name='jumlah_peserta_2']").val(d.jumlahUd2);
                $("input[name='jumlah_peserta_3']").val(d.jumlahRemedUpkp);
                $("input[name='jumlah_peserta_4']").val(d.jumlahRemedUd1);
                $("input[name='jumlah_peserta_5']").val(d.jumlahRemedUd2);

                // === Nilai UPKP dan REMED ===
                $("input[name='nilai_tertinggi_0']").val(d.nilaiTertinggiUpkp);
                $("input[name='nilai_terendah_0']").val(d.nilaiTerendahUpkp);
                $("input[name='nilai_tertinggi_3']").val(d.nilaiTertinggiRemed);
                $("input[name='nilai_terendah_3']").val(d.nilaiTerendahRemed);

                // === Lulus / Tidak Lulus ===
                $("input[name='jumlah_lulus_pg_1']").val(d.lulusUd1);
                $("input[name='jumlah_tidak_lulus_pg_1']").val(d.tidakLulusUd1);
                $("input[name='jumlah_lulus_pg_2']").val(d.lulusUd2);
                $("input[name='jumlah_tidak_lulus_pg_2']").val(d.tidakLulusUd2);
                $("input[name='jumlah_lulus_pg_4']").val(d.lulusRemedUd1);
                $("input[name='jumlah_tidak_lulus_pg_4']").val(d.tidakLulusRemedUd1);
                $("input[name='jumlah_lulus_pg_5']").val(d.lulusRemedUd2);
                $("input[name='jumlah_tidak_lulus_pg_5']").val(d.tidakLulusRemedUd2);

                // Reset variabel temp
                editDataTemp = null;
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Pastikan modal input tidak ikut terbuka saat edit ditekan
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault(); // hentikan default link behavior
                e.stopPropagation(); // hentikan bubbling event ke elemen lain

                // Tutup modal input kalau masih kebuka
                $('#inputDataModal').modal('hide');

                // Tampilkan modal edit
                $('#editDataModal').modal('show');
            });

            // Juga pastikan tidak dua modal terbuka bersamaan
            $('#editDataModal').on('show.bs.modal', function () {
                $('#inputDataModal').modal('hide');
            });

            $('#inputDataModal').on('show.bs.modal', function () {
                $('#editDataModal').modal('hide');
            });
        });

    </script>
    <script>
        $(document).ready(function () {
            // Hitung jumlah input petugas di modal edit
            let editPetugasCount = $('#editPetugasCatGroup input').length || 1;

            // Tambah petugas
            $(document).on('click', '#btnEditAddPetugas', function () {
                editPetugasCount++;
                const container = $('#editPetugasCatGroup');
                const input = `
            <input type="text" 
                   name="petugas_cat[]" 
                   class="form-control mb-2" 
                   placeholder="Nama Pegawai ${editPetugasCount}">
        `;
                container.append(input);
            });

            // Kurangi petugas
            $(document).on('click', '#btnEditRemovePetugas', function () {
                const container = $('#editPetugasCatGroup');
                if (container.children('input').length > 1) {
                    container.children('input').last().remove();
                    editPetugasCount--;
                }
            });

            // Reset counter setiap kali modal dibuka
            $('#editDataModal').on('shown.bs.modal', function () {
                editPetugasCount = $('#editPetugasCatGroup input').length || 1;
            });
        });
    </script>

    <script>
        let chartNilai, chartLulus;

        function renderCharts(groupedData) {
            if (!Array.isArray(groupedData)) return;

            // Hitung nilai tertinggi/terendah (UPKP)
            let nilaiTertinggi = 0;
            let nilaiTerendah = null;
            let totalLulus = 0;
            let totalTidakLulus = 0;

            groupedData.forEach(group => {
                group.rows.forEach(row => {
                    const jenis = (row.jenis_ujian || '').toUpperCase();
                    const max = parseFloat(row.nilai_tertinggi_pg);
                    const min = parseFloat(row.nilai_terendah_pg);
                    const lulus = parseInt(row.jumlah_lulus_pg);
                    const gagal = parseInt(row.jumlah_tidak_lulus_pg);

                    if (jenis.includes("UPKP")) {
                        if (!isNaN(max)) nilaiTertinggi = Math.max(nilaiTertinggi, max);
                        if (!isNaN(min)) nilaiTerendah = (nilaiTerendah === null) ? min : Math.min(nilaiTerendah, min);
                    }

                    if (jenis.includes("UD TK")) {
                        if (!isNaN(lulus)) totalLulus += lulus;
                        if (!isNaN(gagal)) totalTidakLulus += gagal;
                    }
                });
            });

            if (nilaiTerendah === null) nilaiTerendah = 0;

            const ctx1 = document.getElementById("chartNilaiIndex").getContext("2d");
            const ctx2 = document.getElementById("chartLulusIndex").getContext("2d");

            // Hapus grafik lama kalau ada
            if (chartNilai) chartNilai.destroy();
            if (chartLulus) chartLulus.destroy();

            // Grafik Nilai UPKP
            chartNilai = new Chart(ctx1, {
                type: "bar",
                data: {
                    labels: ["UPKP & REMED UPKP"],
                    datasets: [
                        { label: "Nilai Tertinggi", data: [nilaiTertinggi], backgroundColor: "#3b82f6" },
                        { label: "Nilai Terendah", data: [nilaiTerendah], backgroundColor: "#facc15" }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { legend: { position: "bottom" } },
                    scales: { y: { beginAtZero: true } }
                }
            });

            // Grafik Lulus vs Tidak Lulus
            if (totalLulus > 0 || totalTidakLulus > 0) {
                const total = totalLulus + totalTidakLulus;
                const persenLulus = ((totalLulus / total) * 100).toFixed(1);
                const persenTidakLulus = ((totalTidakLulus / total) * 100).toFixed(1);

                chartLulus = new Chart(ctx2, {
                    type: "pie",
                    data: {
                        labels: [
                            `Lulus PG (${persenLulus}%)`,
                            `Tidak Lulus PG (${persenTidakLulus}%)`
                        ],
                        datasets: [{
                            data: [totalLulus, totalTidakLulus],
                            backgroundColor: ["#22c55e", "#ef4444"]
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: { legend: { position: "bottom" } }
                    }
                });
            }
        }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Pastikan data dari server terpasang
            const groupedData = <%- JSON.stringify(groupedData || []) %>;
            console.log("📊 Data grafik awal:", groupedData);
            renderCharts(groupedData);
            updateSummaryCards(groupedData);
            loadRekapFromGrouped(groupedData);
        });
    </script>
    <script>
        function updateSummaryCards(groupedData) {
            if (!Array.isArray(groupedData)) return;

            // 🔹 Hitung jumlah per jenis ujian
            const allJenis = groupedData.flatMap(g => g.rows.map(r => (r.jenis_ujian || "").toUpperCase().trim()));
            const countUpkp = allJenis.filter(j => j === "UPKP" || j === "REMED UPKP").length;
            const countUd1 = allJenis.filter(j => j === "UD TK. I" || j === "REMED UD TK. I").length;
            const countUd2 = allJenis.filter(j => j === "UD TK. II" || j === "REMED UD TK. II").length;

            // 🔹 Hitung nilai tertinggi & terendah (UPKP & REMED UPKP)
            let maxNilai = null;
            let minNilai = null;

            groupedData.forEach(g => {
                g.rows.forEach(r => {
                    const jenis = (r.jenis_ujian || "").toUpperCase();
                    if (jenis.includes("UPKP")) {
                        const max = parseFloat(r.nilai_tertinggi_pg);
                        const min = parseFloat(r.nilai_terendah_pg);

                        if (!isNaN(max)) maxNilai = (maxNilai === null) ? max : Math.max(maxNilai, max);
                        if (!isNaN(min)) minNilai = (minNilai === null) ? min : Math.min(minNilai, min);
                    }
                });
            });

            // 🔹 Tampilkan ke kartu ringkasan
            document.getElementById("cardUpkp").innerText = countUpkp;
            document.getElementById("cardUd1").innerText = countUd1;
            document.getElementById("cardUd2").innerText = countUd2;
            document.getElementById("cardMax").innerText = (maxNilai !== null) ? maxNilai : "-";
            document.getElementById("cardMin").innerText = (minNilai !== null) ? minNilai : "-";
        }
    </script>

    <script>
        async function loadRekapFromGrouped(groupedData) {
                try {
                    if (!Array.isArray(groupedData)) {
                        document.getElementById('rekapContainer').innerHTML =
                            '<div class="text-muted">Tidak ada data untuk direkap.</div>';
                        return;
                    }

                    // 🔹 Hitung total per instansi dari groupedData
                    const rekapMap = {};

                    groupedData.forEach(g => {
                        const instansi = g.instansi || "Tidak diketahui";
                        if (!rekapMap[instansi]) {
                            rekapMap[instansi] = { upkp: 0, ud1: 0, ud2: 0 };
                        }

                        g.rows.forEach(r => {
                            const jenis = (r.jenis_ujian || "").toUpperCase().trim();
                            if (["UPKP", "REMED UPKP"].includes(jenis)) rekapMap[instansi].upkp++;
                            else if (["UD TK. I", "REMED UD TK. I"].includes(jenis)) rekapMap[instansi].ud1++;
                            else if (["UD TK. II", "REMED UD TK. II"].includes(jenis)) rekapMap[instansi].ud2++;
                        });
                    });

                    // 🔹 Ubah jadi HTML
                    const rowsHtml = Object.entries(rekapMap)
                        .sort((a, b) => a[0].localeCompare(b[0]))
                        .map(([instansi, v]) => `
        <tr>
          <td>${instansi}</td>
          <td>${v.upkp}</td>
          <td>${v.ud1}</td>
          <td>${v.ud2}</td>
        </tr>
      `).join("");

                    const html = `
      <div class="card shadow mb-4">
        <div class="card-header py-3">
          <h6 class="m-0 font-weight-bold text-primary">
            Rekap Jumlah Ujian per Instansi
          </h6>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-bordered table-striped text-center">
              <thead class="thead-light">
                <tr>
                  <th>Nama Instansi</th>
                  <th>UPKP</th>
                  <th>UD TK. I</th>
                  <th>UD TK. II</th>
                </tr>
              </thead>
              <tbody>
                ${rowsHtml || '<tr><td colspan="4">Tidak ada data</td></tr>'}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    `;

                    document.getElementById('rekapContainer').innerHTML = html;
                } catch (err) {
                    console.error("❌ Gagal buat rekap:", err);
                    document.getElementById('rekapContainer').innerHTML =
                        '<div class="text-danger">Gagal membuat rekap.</div>';
                }
            }

    </script>
    <script>
        $(document).on('change', '.status-inline', async function () {
            const $sel = $(this);
            const groupId = $sel.data('group-id');
            const oldVal = $sel.data('old') || '';
            const newVal = $sel.val();

            // 🔹 Validasi status yang diizinkan
            const allowed = ['Persiapan Administrasi', 'Menunggu Pelaksanaan', 'Selesai'];
            if (!allowed.includes(newVal)) {
                $sel.val(oldVal);
                return Swal.fire('Tidak valid', 'Status tidak dikenali.', 'warning');
            }

            // 🔹 Konfirmasi perubahan
            const ok = await Swal.fire({
                title: 'Ubah status?',
                html: `
                <p>Group ID: <b>${groupId}</b></p>
                <p>${oldVal || '—'} ➜ <b>${newVal}</b></p>
            `,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ya, simpan',
                cancelButtonText: 'Batal',
                reverseButtons: true
            });

            if (!ok.isConfirmed) {
                $sel.val(oldVal);
                return;
            }

            // 🔹 Disable sementara agar tidak double klik
            $sel.prop('disabled', true);

            try {
                // 🔹 Panggil endpoint update status
                const res = await fetch('/update-status', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ groupId, status: newVal })
                });

                const data = await res.json();

                if (res.ok && data.status === 'success') {
                    // Update data lama
                    $sel.data('old', newVal);
                    Swal.fire('Tersimpan', 'Status berhasil diperbarui.', 'success');
                } else {
                    $sel.val(oldVal);
                    Swal.fire('Gagal', data.message || 'Tidak bisa menyimpan status.', 'error');
                }
            } catch (err) {
                console.error('❌ Error update status:', err);
                $sel.val(oldVal);
                Swal.fire('Error', 'Kesalahan koneksi/server.', 'error');
            } finally {
                $sel.prop('disabled', false);
            }
        });
    </script>


    <script>
        $(document).off('change.statusInline').on('change.statusInline', '.status-inline', async function () {
            const $sel = $(this);
            const groupId = $sel.data('group-id');
            const oldVal = $sel.data('old') || '';
            const newVal = $sel.val();

            const allowed = ['Persiapan Administrasi', 'Menunggu Pelaksanaan', 'Selesai'];
            if (!allowed.includes(newVal)) { $sel.val(oldVal); return; }

            const ok = await Swal.fire({
                title: 'Ubah status?',
                html: `<p>Group ID: <b>${groupId}</b></p><p>${oldVal || '—'} ➜ <b>${newVal}</b></p>`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ya, simpan',
                cancelButtonText: 'Batal'
            });
            if (!ok.isConfirmed) { $sel.val(oldVal); return; }

            $sel.prop('disabled', true);
            try {
                // ✅ route dan payload sesuai server.js kamu
                const res = await fetch(`/update-status/${groupId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status: newVal })
                });

                const data = await res.json().catch(() => ({}));

                if (res.ok && data.status === 'success') {
                    // === sinkronkan UI TANPA reload ===
                    // 1) kunci nilai baru pada select
                    $sel.data('old', newVal).val(newVal);

                    // 2) kalau ada badge/label status di cell yang sama, perbarui
                    const $badge = $sel.closest('td').find('.badge');
                    if ($badge.length) {
                        $badge
                            .text(newVal)
                            .removeClass('badge-success badge-warning badge-info')
                            .addClass(
                                /selesai/i.test(newVal) ? 'badge-success' :
                                    /menunggu/i.test(newVal) ? 'badge-warning' :
                                        'badge-info'
                            );
                    }

                    // 3) sinkronkan tombol Edit pada grup yang sama
                    const $editBtn = $(`.btn-edit[data-group-id="${groupId}"]`);
                    if ($editBtn.length) {
                        $editBtn.data('status', newVal);        // untuk .data(...)
                        $editBtn.attr('data-status', newVal);   // untuk dataset HTML (kalau modal baca via dataset)
                    }

                    // 4) toast sukses
                    Swal.fire({
                        icon: 'success',
                        title: 'Tersimpan',
                        text: data.message || 'Status berhasil diperbarui.',
                        timer: 1000,
                        showConfirmButton: false
                    });
                } else {
                    // tampilkan pesan validasi dari server (bisa HTML)
                    $sel.val(oldVal);
                    const html = data.message || 'Tidak bisa menyimpan status.';
                    Swal.fire({ icon: 'warning', title: data.title || 'Gagal', html });
                }
            } catch (e) {
                console.error(e);
                $sel.val(oldVal);
                Swal.fire('Error', 'Kesalahan koneksi/server.', 'error');
            } finally {
                $sel.prop('disabled', false);
            }
        });
    </script>

    <script>
        window.handleStatusChange = async function (e) {
            const sel = e.target;
            if (!(sel instanceof HTMLSelectElement)) return;

            const groupId = sel.dataset.groupId;
            const oldVal = sel.dataset.old || '';
            const newVal = sel.value;

            const ok = await Swal.fire({
                title: 'Ubah status?',
                text: `Status akan diubah menjadi "${newVal}".`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ya, simpan',
                cancelButtonText: 'Batal'
            }).then(r => r.isConfirmed);

            if (!ok) { sel.value = oldVal; return; }

            sel.disabled = true;
            try {
                // ✨ Sesuaikan dengan server: /update-status/:groupId
                const res = await fetch(`/update-status/${groupId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status: newVal })
                });

                let data = {};
                try { data = await res.json(); } catch (_) { }

                // Server membalas: { status: 'success' | 'error', message? }
                if (res.ok && data.status === 'success') {
                    // 1) kunci nilai baru di select
                    sel.value = newVal;
                    sel.dataset.old = newVal;

                    // 2) perbarui badge (jika ada)
                    const badge = sel.closest('td')?.querySelector('.badge');
                    if (badge) {
                        badge.textContent = newVal;
                        badge.className = 'badge ' + (
                            /selesai/i.test(newVal) ? 'badge-success' :
                                /menunggu/i.test(newVal) ? 'badge-warning' :
                                    'badge-info'
                        );
                    }

                    // 3) sinkronkan tombol Edit pada group yang sama (agar modal baca nilai terbaru)
                    const editBtn = document.querySelector(`.btn-edit[data-group-id="${groupId}"]`);
                    if (editBtn) editBtn.setAttribute('data-status', newVal);

                    // 4) toast sukses
                    Swal.fire({
                        icon: 'success',
                        title: 'Tersimpan',
                        text: data.message || 'Status berhasil diperbarui.',
                        timer: 1000,
                        showConfirmButton: false
                    });
                } else {
                    sel.value = oldVal;
                    Swal.fire('Gagal', data.message || 'Tidak dapat menyimpan status.', 'error');
                }
            } catch (err) {
                sel.value = oldVal;
                Swal.fire('Gagal', 'Tidak bisa menghubungi server.', 'error');
            } finally {
                sel.disabled = false;
            }
        };
    </script>

    <script>
        (function () {
            try {
                // 🔹 Hitung total per instansi dari groupedData
                const rekapMap = {};

                (groupedData || []).forEach(g => {
                    const instansi = g.instansi || 'Tidak diketahui';
                    if (!rekapMap[instansi]) {
                        rekapMap[instansi] = { upkp: 0, ud1: 0, ud2: 0 };
                    }

                    (g.rows || []).forEach(r => {
                        const jenis = (r.jenis_ujian || '').toUpperCase().trim();
                        if (['UPKP', 'REMED UPKP'].includes(jenis)) rekapMap[instansi].upkp++;
                        else if (['UD TK. I', 'REMED UD TK. I'].includes(jenis)) rekapMap[instansi].ud1++;
                        else if (['UD TK. II', 'REMED UD TK. II'].includes(jenis)) rekapMap[instansi].ud2++;
                    });
                });

                // Render HTML
                const rowsHtml = Object.entries(rekapMap)
                    .sort((a, b) => a[0].localeCompare(b[0]))
                    .map(([instansi, v]) => `
          <tr>
            <td>${instansi}</td>
            <td>${v.upkp}</td>
            <td>${v.ud1}</td>
            <td>${v.ud2}</td>
          </tr>
        `).join('');

                const html = `
        <div class="card shadow mb-4">
          <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Rekap Jumlah Ujian per Instansi</h6>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-bordered table-striped text-center">
                <thead class="thead-light">
                  <tr>
                    <th>Nama Instansi</th>
                    <th>UPKP</th>
                    <th>UD TK. I</th>
                    <th>UD TK. II</th>
                  </tr>
                </thead>
                <tbody>
                  ${rowsHtml || '<tr><td colspan="4">Tidak ada data</td></tr>'}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      `;

                const container = document.getElementById('rekapContainer');
                if (container) container.innerHTML = html;
            } catch (err) {
                console.error('❌ Gagal buat rekap:', err);
                const container = document.getElementById('rekapContainer');
                if (container) container.innerHTML = '<div class="text-danger">Gagal membuat rekap.</div>';
            }
        })();
    </script>
    <script>
        // Cek baris terlihat (tidak tersembunyi oleh search/filter/pagination)
        function isRowVisible(tr) {
            if (!tr || tr.classList.contains('d-none')) return false;
            const style = getComputedStyle(tr);
            if (style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0') return false;
            // Jika ada parent table yang menyembunyikan
            let p = tr.parentElement;
            while (p && p !== document.body) {
                const ps = getComputedStyle(p);
                if (ps.display === 'none' || ps.visibility === 'hidden') return false;
                p = p.parentElement;
            }
            return true;
        }

        function updateTableFooterTotals() {
            let totalPeserta = 0, totalLulus = 0, totalTidakLulus = 0;

            document.querySelectorAll('#dataTable tbody tr.data-row').forEach(tr => {
                if (!isRowVisible(tr)) return; // ⬅️ hanya baris yang tampak

                const jenis = (tr.dataset.jenis || '').toUpperCase();
                const peserta = Number(tr.dataset.peserta || 0);
                const lulus = Number(tr.dataset.lulus || 0);
                const tidak = Number(tr.dataset.tidak || 0);

                totalPeserta += isFinite(peserta) ? peserta : 0;

                // Lulus/Tidak hanya untuk UD TK (I/II & REMED)
                if (jenis.includes('UD TK')) {
                    totalLulus += isFinite(lulus) ? lulus : 0;
                    totalTidakLulus += isFinite(tidak) ? tidak : 0;
                }
            });

            const tfoot = document.getElementById('tableFooter');
            if (!tfoot) return;
            tfoot.innerHTML = `
        <tr style="background:#f8f9fc; font-weight:600;">
          <td></td>
          <td class="text-right pr-2">TOTAL</td>
          <td></td>
          <td class="text-center">${totalPeserta}</td>
          <td></td><td></td><td></td><td></td>
          <td></td><td></td>
          <td class="text-center text-success">${totalLulus}</td>
          <td class="text-center text-danger">${totalTidakLulus}</td>
          <td></td>
        </tr>
      `;
        }

        // Re-run setelah DOM siap
        document.addEventListener('DOMContentLoaded', updateTableFooterTotals);

        // Re-run setelah event internal kamu
        document.addEventListener('ajaxTableUpdated', () => {
            // Tunggu frame berikutnya supaya baris sudah ter-render / hide
            requestAnimationFrame(updateTableFooterTotals);
        });

        // Re-run otomatis saat isi/body tabel berubah (search, pagination, toggle class, dsb.)
        const tbody = document.getElementById('tableBody');
        if (tbody) {
            const observer = new MutationObserver(() => {
                // debounce ringan
                clearTimeout(window.__tfootDebounce);
                window.__tfootDebounce = setTimeout(updateTableFooterTotals, 0);
            });
            observer.observe(tbody, { childList: true, subtree: true, attributes: true, attributeFilter: ['class', 'style'] });
        }
    </script>

<script>
    (function () {
        function moveTotalsIntoTbody() {
            document.querySelectorAll('table').forEach((tbl, idx) => {
                const tfoot = tbl.tFoot;
                const tbody = tbl.tBodies[0];
                if (!tfoot || !tbody) return;

                // simpan marker agar bisa dikembalikan
                tbl.dataset.totalMoved = '1';

                // pindahkan semua baris di tfoot ke akhir tbody
                const rows = Array.from(tfoot.rows);
                rows.forEach((tr) => {
                    tr.classList.add('total-row'); // untuk styling tetap hijau
                    tbody.appendChild(tr);
                });

                // sembunyikan elemen tfoot kosong (agar tidak menyisakan ruang)
                tfoot.style.display = 'none';
            });
        }

        function restoreTotalsToTfoot() {
            document.querySelectorAll('table').forEach((tbl) => {
                if (tbl.dataset.totalMoved !== '1') return;

                const tfoot = tbl.tFoot;
                const tbody = tbl.tBodies[0];
                if (!tfoot || !tbody) return;

                // kembalikan baris total ke tfoot
                const rows = Array.from(tbody.querySelectorAll('tr.total-row'));
                rows.forEach((tr) => {
                    tr.classList.remove('total-row');
                    tfoot.appendChild(tr);
                });

                tfoot.style.removeProperty('display');
                delete tbl.dataset.totalMoved;
            });
        }

        // Event print modern
        window.addEventListener('beforeprint', moveTotalsIntoTbody);
        window.addEventListener('afterprint', restoreTotalsToTfoot);

        // Fallback untuk Chrome lama
        const mql = window.matchMedia('print');
        if (mql && mql.addListener) {
            mql.addListener((mq) => {
                if (mq.matches) moveTotalsIntoTbody();
                else restoreTotalsToTfoot();
            });
        }
    })();
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const role = "<%= role %>";

        // === Fungsi bantu untuk menerapkan hak akses ===
        function applyRoleVisibility() {
            if (role === "viewer") {
                // 🔹 Sembunyikan tombol aksi
                document.querySelectorAll(".btn-edit, .btn-delete, .btn-input-nilai").forEach(el => {
                    el.style.display = "none";
                });

                // 🔹 Sembunyikan tombol Input Data Baru
                const inputDataLink = document.querySelector('a[data-target="#inputDataModal"]');
                if (inputDataLink) inputDataLink.style.display = "none";

                // 🔹 Sembunyikan menu Manajemen Akun
                const akunMenu = document.querySelector('a[href="/akun"]');
                if (akunMenu) akunMenu.style.display = "none";

                // 🔹 Nonaktifkan elemen yang bisa ubah data
                document.querySelectorAll("input[type='number'], textarea, button[type='submit']").forEach(el => {
                    el.disabled = true;
                });

                // 🚫 Disable dropdown status (pakai .status-inline)
                document.querySelectorAll(".status-inline, .status-select").forEach(sel => {
                    sel.disabled = true;
                    sel.title = "Hanya admin atau pegawai yang dapat mengubah status";
                    sel.style.backgroundColor = "#f1f1f1"; // tampilan abu-abu
                    sel.style.cursor = "not-allowed";
                });
            }

            if (role === "pegawai") {
                const akunMenu = document.querySelector('a[href="/akun"]');
                if (akunMenu) akunMenu.style.display = "none";
            }
        }

        // 🔹 Jalankan saat load pertama
        setTimeout(applyRoleVisibility, 500);

        // 🔹 Bungkus fetch agar setiap kali AJAX selesai, fungsi ini dipanggil lagi
        const originalFetch = window.fetch;
        window.fetch = async (...args) => {
            const response = await originalFetch(...args);
            // Clone respon supaya tetap bisa dipakai oleh script lain
            const cloned = response.clone();
            cloned.text().then(() => {
                setTimeout(applyRoleVisibility, 300); // jalankan ulang setelah tabel diganti
            });
            return response;
        };

        // 🔹 Cegah akses /akun bagi non-admin
        const akunMenu = document.querySelector('a[href="/akun"]');
        if (akunMenu && role !== "admin") {
            akunMenu.addEventListener("click", function (e) {
                e.preventDefault();
                Swal.fire({
                    icon: "error",
                    title: "Akses Ditolak",
                    text: "Anda tidak memiliki izin untuk membuka halaman ini.",
                    confirmButtonText: "Mengerti",
                    confirmButtonColor: "#3085d6"
                });
            });
        }
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const role = "<%= role %>";

        // Jika bukan admin, cegah buka menu /akun
        const akunMenu = document.querySelector('a[href="/akun"]');
        if (akunMenu && role !== "admin") {
            akunMenu.addEventListener("click", function (e) {
                e.preventDefault(); // cegah pindah halaman
                Swal.fire({
                    icon: "error",
                    title: "Akses Ditolak",
                    text: "Anda tidak memiliki izin untuk membuka halaman ini.",
                    confirmButtonText: "Mengerti",
                    confirmButtonColor: "#3085d6"
                });
            });
        }
    });
</script>
<script>
    async function loadInstansiOptions() {
        try {
            const res = await fetch('/instansi');
            const data = await res.json();
            const selectTambah = document.getElementById('nama_instansi');
            const selectEdit = document.getElementById('edit_nama_instansi');
            if (!selectTambah || !selectEdit) return;

            // Bersihkan dan isi ulang
            [selectTambah, selectEdit].forEach(select => {
                select.innerHTML = '<option value="">-- Pilih Instansi --</option>';
                data.forEach(row => {
                    const opt = document.createElement('option');
                    opt.value = row.id_instansi;
                    opt.textContent = row.nama_instansi;
                    select.appendChild(opt);
                });
            });
        } catch (err) {
            console.error('❌ Gagal load instansi:', err);
        }
    }

    // Jalankan saat modal dibuka
    $('#inputDataModal, #editDataModal').on('show.bs.modal', loadInstansiOptions);
</script>

</body>

</html>